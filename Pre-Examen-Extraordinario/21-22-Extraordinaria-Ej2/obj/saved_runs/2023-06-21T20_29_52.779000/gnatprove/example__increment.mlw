module Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type integer = <range -2147483648 2147483647>
  
  val function first : int
    ensures { result = ((- 2147483648) : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = integer,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type integer__ref = { mutable integer__content : integer }
  
  function integer__ref_integer__content__projection (a: integer__ref) : integer =
    a.integer__content
  
  meta "model_projection" function integer__ref_integer__content__projection
  
  meta "inline:no" function integer__ref_integer__content__projection
  
  val integer__havoc (x: integer__ref) : unit
    writes { x }
end

module Standard__integer__rep
  use Standard__integer as Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Standard__integer.integer) : int =
    Standard__integer.integer'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Standard__natural
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type natural = <range 0 2147483647>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = natural,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type natural__ref = { mutable natural__content : natural }
  
  function natural__ref_natural__content__projection (a: natural__ref) : natural =
    a.natural__content
  
  meta "model_projection" function natural__ref_natural__content__projection
  
  meta "inline:no" function natural__ref_natural__content__projection
  
  val natural__havoc (x: natural__ref) : unit
    writes { x }
end

module Standard__natural___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__natural as Standard__natural
  
  predicate dynamic_invariant (temp___expr_46: int) (temp___is_init_42: bool) (temp___skip_constant_43: bool) (temp___do_toplevel_44: bool) (temp___do_typ_inv_45: bool) =
    if ((temp___is_init_42 = True) \/
          (Standard__natural.first <= Standard__natural.last)) then
      (((Standard__natural.dynamic_property Standard__natural.first)
          Standard__natural.last)
         temp___expr_46)
    else true
  
  val dynamic_invariant (temp___expr_46: int) (temp___is_init_42: bool) (temp___skip_constant_43: bool) (temp___do_toplevel_44: bool) (temp___do_typ_inv_45: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_46 : int))
                      (temp___is_init_42 : bool))
                     (temp___skip_constant_43 : bool))
                    (temp___do_toplevel_44 : bool))
                   (temp___do_typ_inv_45 : bool)) }
  
  predicate default_initial_assumption (temp___expr_47: int) (temp___skip_top_level_48: bool) =
    true
  
  val default_initial_assumption (temp___expr_47: int) (temp___skip_top_level_48: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_47 : int))
                   (temp___skip_top_level_48 : bool)) }
end

module Array__Int__Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__integer__rep as Standard__integer__rep
  
  function index_I1_one : int = 1 : int
  
  type component_type = Standard__integer.integer
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_161 : int.
          if ((a__first <= temp___idx_161) /\ (temp___idx_161 <= a__last)) then
            ((Standard__integer__rep.to_rep ((get a) temp___idx_161))
               = (Standard__integer__rep.to_rep
                    ((get b) ((b__first - a__first) + temp___idx_161))))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_161 : int.
                 if ((a__first <= temp___idx_161) /\
                       (temp___idx_161 <= a__last)) then
                   ((Standard__integer__rep.to_rep ((get a) temp___idx_161))
                      = (Standard__integer__rep.to_rep
                           ((get b) ((b__first - a__first) + temp___idx_161))))
                 else true)))
end

module Example__increment__v1
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer as Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  val v1 : Array__Int__Standard__integer.map__ref
  
  val function v1__first : Standard__integer.integer
  
  val function v1__last : Standard__integer.integer
end

module Example__t_vector
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__integer as Standard__integer
  use Standard__natural as Standard__natural
  use Standard__integer__rep as Standard__integer__rep
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  type component_type = Standard__integer.integer
  
  function index_1_id (x: int) : int = x
  
  clone export ada__model.Unconstr_Array with
    axiom .,
    type map = Array__Int__Standard__integer.map,
    function array_bool_eq = Array__Int__Standard__integer.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__natural.dynamic_property,
    predicate index_rep_le = Int.( <= )
  
  type t_vector = __t
  
  meta "model_projection" function to_array
  
  meta "inline:no" function to_array
  
  meta "model_projection" function first
  
  meta "inline:no" function first
  
  meta "model_projection" function last
  
  meta "inline:no" function last
  
  type t_vector__ref = { mutable t_vector__content : t_vector }
  
  function t_vector__ref_t_vector__content__projection (a: t_vector__ref) : t_vector =
    a.t_vector__content
  
  meta "model_projection" function t_vector__ref_t_vector__content__projection
  
  meta "inline:no" function t_vector__ref_t_vector__content__projection
  
  val t_vector__havoc (x: t_vector__ref) : unit
    writes { x }
end

module Example__increment__v2
  use _gnatprove_standard.Main
  use int.Int
  use Example__t_vector as Example__t_vector
  
  val function v2 : Example__t_vector.t_vector
end

module Example__increment__from
  use _gnatprove_standard.Main
  use int.Int
  
  val function from : int
end

module Example__increment__to
  use _gnatprove_standard.Main
  use int.Int
  
  val function to__ : int
end

module Example__increment__i
  use _gnatprove_standard.Main
  use int.Int
  
  val i : int__ref
end

module Example__t_vector___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__natural as Standard__natural
  use Example__t_vector as Example__t_vector
  
  predicate dynamic_invariant (temp___expr_166: Example__t_vector.t_vector) (temp___is_init_162: bool) (temp___skip_constant_163: bool) (temp___do_toplevel_164: bool) (temp___do_typ_inv_165: bool) =
    if temp___skip_constant_163 then true
    else
      ((((Example__t_vector.dynamic_property Standard__natural.first)
           Standard__natural.last)
          (Example__t_vector.first temp___expr_166))
         (Example__t_vector.last temp___expr_166))
  
  val dynamic_invariant (temp___expr_166: Example__t_vector.t_vector) (temp___is_init_162: bool) (temp___skip_constant_163: bool) (temp___do_toplevel_164: bool) (temp___do_typ_inv_165: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_166 : Example__t_vector.t_vector))
                      (temp___is_init_162 : bool))
                     (temp___skip_constant_163 : bool))
                    (temp___do_toplevel_164 : bool))
                   (temp___do_typ_inv_165 : bool)) }
end

module Example__increment__S1b
  use export Example__t_vector
  use _gnatprove_standard.Main
  use int.Int
  
  type s1b = t_vector
  
  type s1b__ref = { mutable s1b__content : s1b }
  
  function s1b__ref_s1b__content__projection (a: s1b__ref) : s1b =
    a.s1b__content
  
  meta "model_projection" function s1b__ref_s1b__content__projection
  
  meta "inline:no" function s1b__ref_s1b__content__projection
  
  val s1b__havoc (x: s1b__ref) : unit
    writes { x }
end

module Example__increment__L_1
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_1
end

module Standard__integer___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  
  predicate dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) =
    if ((temp___is_init_14 = True) \/
          (Standard__integer.first <= Standard__integer.last)) then
      (((Standard__integer.dynamic_property Standard__integer.first)
          Standard__integer.last)
         temp___expr_18)
    else true
  
  val dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_18 : int))
                      (temp___is_init_14 : bool))
                     (temp___skip_constant_15 : bool))
                    (temp___do_toplevel_16 : bool))
                   (temp___do_typ_inv_17 : bool)) }
  
  predicate default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) =
    true
  
  val default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_19 : int))
                   (temp___skip_top_level_20 : bool)) }
end

module Example__increment__i___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Example__increment__L_1___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Example__increment__v1___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Example__increment__v2___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Example__increment__from___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Example__increment__to___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Example__increment__S1b___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer__rep as Standard__integer__rep
  use Example__increment__v1 as Example__increment__v1
  use Example__increment__S1b as Example__increment__S1b
  
  predicate dynamic_invariant (temp___expr_194: Example__increment__S1b.s1b) (temp___is_init_190: bool) (temp___skip_constant_191: bool) (temp___do_toplevel_192: bool) (temp___do_typ_inv_193: bool) =
    if temp___skip_constant_191 then true
    else
      ((((((Example__increment__S1b.dynamic_property
              (Standard__integer__rep.to_rep Example__increment__v1.v1__first))
             (Standard__integer__rep.to_rep Example__increment__v1.v1__last))
            (Example__increment__S1b.first temp___expr_194))
           (Example__increment__S1b.last temp___expr_194)) /\
          ((Example__increment__S1b.first temp___expr_194)
             = (Standard__integer__rep.to_rep
                  Example__increment__v1.v1__first))) /\
         ((Example__increment__S1b.last temp___expr_194)
            = (Standard__integer__rep.to_rep Example__increment__v1.v1__last)))
  
  val dynamic_invariant (temp___expr_194: Example__increment__S1b.s1b) (temp___is_init_190: bool) (temp___skip_constant_191: bool) (temp___do_toplevel_192: bool) (temp___do_typ_inv_193: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_194 : Example__increment__S1b.s1b))
                      (temp___is_init_190 : bool))
                     (temp___skip_constant_191 : bool))
                    (temp___do_toplevel_192 : bool))
                   (temp___do_typ_inv_193 : bool)) }
  
  predicate default_initial_assumption (temp___expr_196: Example__increment__S1b.s1b) (temp___skip_top_level_197: bool) =
    ((true /\
        ((Example__increment__S1b.first temp___expr_196)
           = (Standard__integer__rep.to_rep Example__increment__v1.v1__first))) /\
       ((Example__increment__S1b.last temp___expr_196)
          = (Standard__integer__rep.to_rep Example__increment__v1.v1__last)))
  
  val default_initial_assumption (temp___expr_196: Example__increment__S1b.s1b) (temp___skip_top_level_197: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_196 : Example__increment__S1b.s1b))
                   (temp___skip_top_level_197 : bool)) }
end

module Example__increment__subprogram_def
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Integer as Integer
  use _gnatprove_standard.Boolean as Boolean
  use Standard__integer as Standard__integer
  use Standard__integer as Standard__integer
  use Standard__integer__rep as Standard__integer__rep
  use Standard__natural as Standard__natural
  use Standard__natural___axiom as Standard__natural___axiom
  use Standard__integer__rep as Standard__integer__rep
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Example__increment__v1 as Example__increment__v1
  use Example__t_vector as Example__t_vector
  use Example__increment__v2 as Example__increment__v2
  use Example__increment__from as Example__increment__from
  use Example__increment__to as Example__increment__to
  use Example__increment__i as Example__increment__i
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Example__t_vector___axiom as Example__t_vector___axiom
  use Example__increment__S1b as Example__increment__S1b
  use Example__increment__L_1 as Example__increment__L_1
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__natural___axiom as Standard__natural___axiom
  use Standard__integer___axiom as Standard__integer___axiom
  use Example__increment__i___axiom as Example__increment__i___axiom
  use Example__increment__L_1___axiom as Example__increment__L_1___axiom
  use Example__t_vector___axiom as Example__t_vector___axiom
  use Example__increment__v1___axiom as Example__increment__v1___axiom
  use Example__increment__v2___axiom as Example__increment__v2___axiom
  use Example__increment__from___axiom as Example__increment__from___axiom
  use Example__increment__to___axiom as Example__increment__to___axiom
  use Example__increment__S1b___axiom as Example__increment__S1b___axiom
  
  let def (__void_param : unit)
    requires { [#"example.ads" 5 0 0] true }
    ensures { [#"example.ads" 5 0 0]
              [#"example.ads" 19 0 0]
              [@GP_Reason:VC_POSTCONDITION]
              [@GP_Id:30]
              [@GP_Sloc:example.ads:19:16]
              [@GP_Shape:pragargs__andthen]
              [@model_vc_post]
              [@comment:       Post => (for all i in From .. To => V1(i) = V1'Old(i) + V2(i)) and then                ^ example.ads:19:16:VC_POSTCONDITION]
              (((forall i : int.
                   (((Example__increment__from.from <= i) /\
                       (i <= Example__increment__to.to__)) ->
                      ([@GP_Pretty_Ada:1073]
                       [@GP_Sloc:example.ads:19:44]
                       ((Standard__integer__rep.to_rep
                           (let temp___240 =
                              ((Example__increment__S1b.of_array
                                  (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                 (Standard__integer__rep.to_rep
                                    Example__increment__v1.v1__first))
                                (Standard__integer__rep.to_rep
                                   Example__increment__v1.v1__last) in
                            (Array__Int__Standard__integer.get
                               (Example__increment__S1b.to_array temp___240))
                              i))
                          = ((Standard__integer__rep.to_rep
                                (let temp___241 =
                                   old (((Example__increment__S1b.of_array
                                            (Example__increment__v1.v1.
                                               Array__Int__Standard__integer.map__content))
                                           (Standard__integer__rep.to_rep
                                              Example__increment__v1.v1__first))
                                          (Standard__integer__rep.to_rep
                                             Example__increment__v1.v1__last)) in
                                 (Array__Int__Standard__integer.get
                                    (Example__increment__S1b.to_array
                                       temp___241))
                                   i))
                               + (Standard__integer__rep.to_rep
                                    ((Array__Int__Standard__integer.get
                                        (Example__t_vector.to_array
                                           Example__increment__v2.v2))
                                       i))))))) /\
                  (forall i : int.
                     ((((Standard__integer__rep.to_rep
                           Example__increment__v1.v1__first)
                          <= i) /\
                         (i <= (Example__increment__from.from - (1 : int)))) ->
                        ([@GP_Sloc:example.ads:20:46]
                         [@GP_Pretty_Ada:1097]
                         ((Standard__integer__rep.to_rep
                             (let temp___242 =
                                ((Example__increment__S1b.of_array
                                    (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                   (Standard__integer__rep.to_rep
                                      Example__increment__v1.v1__first))
                                  (Standard__integer__rep.to_rep
                                     Example__increment__v1.v1__last) in
                              (Array__Int__Standard__integer.get
                                 (Example__increment__S1b.to_array temp___242))
                                i))
                            = (Standard__integer__rep.to_rep
                                 (let temp___243 =
                                    old (((Example__increment__S1b.of_array
                                             (Example__increment__v1.v1.
                                                Array__Int__Standard__integer.map__content))
                                            (Standard__integer__rep.to_rep
                                               Example__increment__v1.v1__first))
                                           (Standard__integer__rep.to_rep
                                              Example__increment__v1.v1__last)) in
                                  (Array__Int__Standard__integer.get
                                     (Example__increment__S1b.to_array
                                        temp___243))
                                    i))))))) /\
                 (forall i : int.
                    ((((Example__increment__from.from + (1 : int)) <= i) /\
                        (i
                           <= (Standard__integer__rep.to_rep
                                 Example__increment__v1.v1__last))) ->
                       ([@GP_Sloc:example.ads:21:44]
                        [@GP_Pretty_Ada:1117]
                        ((Standard__integer__rep.to_rep
                            (let temp___244 =
                               ((Example__increment__S1b.of_array
                                   (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                  (Standard__integer__rep.to_rep
                                     Example__increment__v1.v1__first))
                                 (Standard__integer__rep.to_rep
                                    Example__increment__v1.v1__last) in
                             (Array__Int__Standard__integer.get
                                (Example__increment__S1b.to_array temp___244))
                               i))
                           = (Standard__integer__rep.to_rep
                                (let temp___245 =
                                   old (((Example__increment__S1b.of_array
                                            (Example__increment__v1.v1.
                                               Array__Int__Standard__integer.map__content))
                                           (Standard__integer__rep.to_rep
                                              Example__increment__v1.v1__first))
                                          (Standard__integer__rep.to_rep
                                             Example__increment__v1.v1__last)) in
                                 (Array__Int__Standard__integer.get
                                    (Example__increment__S1b.to_array
                                       temp___245))
                                   i))))))) }
  = [@vc:divergent]
    (([@GNAT-comment:Assume dynamic invariants of inputs of the subprogram example.ads:5]
      ());
     assume {
       if False then true
       else
         ((((Example__t_vector.dynamic_property Standard__natural.first)
              Standard__natural.last)
             (Example__increment__S1b.first
                (((Example__increment__S1b.of_array
                     (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                    (Standard__integer__rep.to_rep
                       Example__increment__v1.v1__first))
                   (Standard__integer__rep.to_rep
                      Example__increment__v1.v1__last))))
            (Example__increment__S1b.last
               (((Example__increment__S1b.of_array
                    (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                   (Standard__integer__rep.to_rep
                      Example__increment__v1.v1__first))
                  (Standard__integer__rep.to_rep
                     Example__increment__v1.v1__last)))) };
     assume {
       ((((Example__t_vector___axiom.dynamic_invariant
             Example__increment__v2.v2)
            True)
           False)
          True)
         True };
     assume {
       ((((Standard__natural___axiom.dynamic_invariant
             Example__increment__from.from)
            True)
           False)
          True)
         True };
     assume {
       ((((Standard__natural___axiom.dynamic_invariant
             Example__increment__to.to__)
            True)
           False)
          True)
         True };
     ([@GNAT-comment:Assume moved pointers in outputs of the subprogram example.ads:5]
      ());
     ([@GNAT-comment:Check for RTE in the Pre of the subprogram example.ads:5]
      ());
     (begin
        ensures { true }
        let _ =
          let _ =
            ((((((((((begin
                        ensures { true }
                        let _ =
                          let _ =
                            ((Example__increment__S1b.of_array
                                (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                               (Standard__integer__rep.to_rep
                                  Example__increment__v1.v1__first))
                              (Standard__integer__rep.to_rep
                                 Example__increment__v1.v1__last) in
                          () in
                        ()
                      end);
                     ((Integer.length
                         (Standard__integer__rep.to_rep
                            Example__increment__v1.v1__first))
                        (Standard__integer__rep.to_rep
                           Example__increment__v1.v1__last)))
                      = (Example__t_vector.length Example__increment__v2.v2))
                    &&
                     ((Standard__integer__rep.to_rep
                         ((begin
                             ensures { true }
                             let _ =
                               let _ =
                                 ((Example__increment__S1b.of_array
                                     (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                    (Standard__integer__rep.to_rep
                                       Example__increment__v1.v1__first))
                                   (Standard__integer__rep.to_rep
                                      Example__increment__v1.v1__last) in
                               () in
                             ()
                           end);
                          Example__increment__v1.v1__first))
                        = (Example__t_vector.first Example__increment__v2.v2)))
                   &&
                    (Example__increment__from.from
                       <= Example__increment__to.to__))
                  &&
                   (Example__increment__from.from
                      >= (Standard__integer__rep.to_rep
                            ((begin
                                ensures { true }
                                let _ =
                                  let _ =
                                    ((Example__increment__S1b.of_array
                                        (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                       (Standard__integer__rep.to_rep
                                          Example__increment__v1.v1__first))
                                      (Standard__integer__rep.to_rep
                                         Example__increment__v1.v1__last) in
                                  () in
                                ()
                              end);
                             Example__increment__v1.v1__first))))
                 &&
                  (Example__increment__to.to__
                     >= (Standard__integer__rep.to_rep
                           ((begin
                               ensures { true }
                               let _ =
                                 let _ =
                                   ((Example__increment__S1b.of_array
                                       (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                      (Standard__integer__rep.to_rep
                                         Example__increment__v1.v1__first))
                                     (Standard__integer__rep.to_rep
                                        Example__increment__v1.v1__last) in
                                 () in
                               ()
                             end);
                            Example__increment__v1.v1__first))))
                &&
                 (Example__increment__from.from
                    <= ([#"example.ads" 15 0 0]
                        [@GP_Shape:pragargs__andthen__andthen__andthen__andthen__cmp__sub]
                        [@vc:annotation]
                        [@GP_Reason:VC_OVERFLOW_CHECK]
                        [@comment:       From <= V1'Last -1 and then                        ^ example.ads:15:24:VC_OVERFLOW_CHECK]
                        [@GP_Sloc:example.ads:15:24]
                        [@GP_Id:26]
                        (Standard__integer.range_check_
                           ((Standard__integer__rep.to_rep
                               (([#"example.ads" 15 0 0]
                                 (begin
                                    ensures { true }
                                    let _ =
                                      let _ =
                                        ((Example__increment__S1b.of_array
                                            (Example__increment__v1.v1.
                                               Array__Int__Standard__integer.map__content))
                                           (Standard__integer__rep.to_rep
                                              Example__increment__v1.v1__first))
                                          (Standard__integer__rep.to_rep
                                             Example__increment__v1.v1__last) in
                                      () in
                                    ()
                                  end));
                                Example__increment__v1.v1__last))
                              - (1 : int))))))
               &&
                (Example__increment__to.to__
                   <= ([#"example.ads" 16 0 0]
                       [@GP_Shape:pragargs__andthen__andthen__andthen__cmp__sub]
                       [@vc:annotation]
                       [@GP_Reason:VC_OVERFLOW_CHECK]
                       [@comment:       To <= V1'Last -1 and then                      ^ example.ads:16:22:VC_OVERFLOW_CHECK]
                       [@GP_Id:27]
                       [@GP_Sloc:example.ads:16:22]
                       (Standard__integer.range_check_
                          ((Standard__integer__rep.to_rep
                              (([#"example.ads" 16 0 0]
                                (begin
                                   ensures { true }
                                   let _ =
                                     let _ =
                                       ((Example__increment__S1b.of_array
                                           (Example__increment__v1.v1.
                                              Array__Int__Standard__integer.map__content))
                                          (Standard__integer__rep.to_rep
                                             Example__increment__v1.v1__first))
                                         (Standard__integer__rep.to_rep
                                            Example__increment__v1.v1__last) in
                                     () in
                                   ()
                                 end));
                               Example__increment__v1.v1__last))
                             - (1 : int))))))
              &&
               ((let i = val _f : int in
                         _f in
                 if ((Boolean.andb
                        ((Standard__integer__rep.to_rep
                            ((begin
                                ensures { true }
                                let _ =
                                  let _ =
                                    ((Example__increment__S1b.of_array
                                        (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                       (Standard__integer__rep.to_rep
                                          Example__increment__v1.v1__first))
                                      (Standard__integer__rep.to_rep
                                         Example__increment__v1.v1__last) in
                                  () in
                                ()
                              end);
                             Example__increment__v1.v1__first))
                           <= i))
                       (i
                          <= (Standard__integer__rep.to_rep
                                ((begin
                                    ensures { true }
                                    let _ =
                                      let _ =
                                        ((Example__increment__S1b.of_array
                                            (Example__increment__v1.v1.
                                               Array__Int__Standard__integer.map__content))
                                           (Standard__integer__rep.to_rep
                                              Example__increment__v1.v1__first))
                                          (Standard__integer__rep.to_rep
                                             Example__increment__v1.v1__last) in
                                      () in
                                    ()
                                  end);
                                 Example__increment__v1.v1__last)))) then
                   (begin
                      ensures { true }
                      let _ =
                        let _ =
                          let temp___232 =
                            Standard__integer__rep.to_rep
                              (let temp___231 =
                                 ((Example__increment__S1b.of_array
                                     (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                    (Standard__integer__rep.to_rep
                                       Example__increment__v1.v1__first))
                                   (Standard__integer__rep.to_rep
                                      Example__increment__v1.v1__last) in
                               (Array__Int__Standard__integer.get
                                  (Example__increment__S1b.to_array
                                     temp___231))
                                 (assert {
                                    [#"example.ads" 17 0 0]
                                    [@comment:       (for all i in V1'First .. V1'Last => V1(i) in 0 .. 1) and then                                                ^ example.ads:17:48:VC_INDEX_CHECK]
                                    [@vc:annotation]
                                    [@GP_Reason:VC_INDEX_CHECK]
                                    [@GP_Shape:pragargs__andthen__andthen__forall__in__ixdcomp]
                                    [@GP_Sloc:example.ads:17:48]
                                    [@GP_Id:28]
                                    (((Example__increment__S1b.first
                                         temp___231)
                                        <= i) /\
                                       (i
                                          <= (Example__increment__S1b.last
                                                temp___231))) };
                                  i)) in
                          (Boolean.andb ((0 : int) <= temp___232))
                            (temp___232 <= (1 : int)) in
                        () in
                      ()
                    end)
                 else ());
                (val _f : bool
                   ensures { ((result = True) <->
                                (forall i : int.
                                   ((((Standard__integer__rep.to_rep
                                         Example__increment__v1.v1__first)
                                        <= i) /\
                                       (i
                                          <= (Standard__integer__rep.to_rep
                                                Example__increment__v1.v1__last))) ->
                                      ([@GP_Pretty_Ada:1039]
                                       (let temp___234 =
                                          Standard__integer__rep.to_rep
                                            (let temp___233 =
                                               ((Example__increment__S1b.of_array
                                                   (Example__increment__v1.v1.
                                                      Array__Int__Standard__integer.map__content))
                                                  (Standard__integer__rep.to_rep
                                                     Example__increment__v1.v1__first))
                                                 (Standard__integer__rep.to_rep
                                                    Example__increment__v1.v1__last) in
                                             (Array__Int__Standard__integer.get
                                                (Example__increment__S1b.to_array
                                                   temp___233))
                                               i) in
                                        (((0 : int) <= temp___234) /\
                                           (temp___234 <= (1 : int)))))))) } in
                 _f)))
             &&
              ((let i = val _f : int in
                        _f in
                if ((Boolean.andb
                       ((Example__t_vector.first Example__increment__v2.v2)
                          <= i))
                      (i
                         <= (Standard__integer__rep.to_rep
                               ((begin
                                   ensures { true }
                                   let _ =
                                     let _ =
                                       ((Example__increment__S1b.of_array
                                           (Example__increment__v1.v1.
                                              Array__Int__Standard__integer.map__content))
                                          (Standard__integer__rep.to_rep
                                             Example__increment__v1.v1__first))
                                         (Standard__integer__rep.to_rep
                                            Example__increment__v1.v1__last) in
                                     () in
                                   ()
                                 end);
                                Example__increment__v1.v1__last)))) then
                  (begin
                     ensures { true }
                     let _ =
                       let _ =
                         let temp___235 =
                           Standard__integer__rep.to_rep
                             ((Array__Int__Standard__integer.get
                                 (Example__t_vector.to_array
                                    Example__increment__v2.v2))
                                (assert {
                                   [#"example.ads" 18 0 0]
                                   [@GP_Sloc:example.ads:18:47]
                                   [@vc:annotation]
                                   [@comment:       (for all i in V2'First .. V1'Last=> V2(i) in 0 .. 1),                                               ^ example.ads:18:47:VC_INDEX_CHECK]
                                   [@GP_Reason:VC_INDEX_CHECK]
                                   [@GP_Shape:pragargs__andthen__forall__in__ixdcomp]
                                   [@GP_Id:29]
                                   (((Example__t_vector.first
                                        Example__increment__v2.v2)
                                       <= i) /\
                                      (i
                                         <= (Example__t_vector.last
                                               Example__increment__v2.v2))) };
                                 i)) in
                         (Boolean.andb ((0 : int) <= temp___235))
                           (temp___235 <= (1 : int)) in
                       () in
                     ()
                   end)
                else ());
               (val _f : bool
                  ensures { ((result = True) <->
                               (forall i : int.
                                  ((((Example__t_vector.first
                                        Example__increment__v2.v2)
                                       <= i) /\
                                      (i
                                         <= (Standard__integer__rep.to_rep
                                               Example__increment__v1.v1__last))) ->
                                     ([@GP_Pretty_Ada:1057]
                                      (let temp___236 =
                                         Standard__integer__rep.to_rep
                                           ((Array__Int__Standard__integer.get
                                               (Example__t_vector.to_array
                                                  Example__increment__v2.v2))
                                              i) in
                                       (((0 : int) <= temp___236) /\
                                          (temp___236 <= (1 : int)))))))) } in
                _f)) in
          () in
        ()
      end);
     ([@GNAT-comment:Assume Pre of the subprogram example.ads:5] ());
     assume {
       ((((((((([@GP_Pretty_Ada:981]
                (((Integer.length
                     (Standard__integer__rep.to_rep
                        Example__increment__v1.v1__first))
                    (Standard__integer__rep.to_rep
                       Example__increment__v1.v1__last))
                   = (Example__t_vector.length Example__increment__v2.v2))) /\
                 ([@GP_Pretty_Ada:989]
                  ((Standard__integer__rep.to_rep
                      Example__increment__v1.v1__first)
                     = (Example__t_vector.first Example__increment__v2.v2)))) /\
                ([@GP_Pretty_Ada:995]
                 (Example__increment__from.from
                    <= Example__increment__to.to__))) /\
               ([@GP_Pretty_Ada:999]
                (Example__increment__from.from
                   >= (Standard__integer__rep.to_rep
                         Example__increment__v1.v1__first)))) /\
              ([@GP_Pretty_Ada:1005]
               (Example__increment__to.to__
                  >= (Standard__integer__rep.to_rep
                        Example__increment__v1.v1__first)))) /\
             ([@GP_Pretty_Ada:1011]
              (Example__increment__from.from
                 <= ((Standard__integer__rep.to_rep
                        Example__increment__v1.v1__last)
                       - (1 : int))))) /\
            ([@GP_Pretty_Ada:1019]
             (Example__increment__to.to__
                <= ((Standard__integer__rep.to_rep
                       Example__increment__v1.v1__last)
                      - (1 : int))))) /\
           (forall i : int.
              ((((Standard__integer__rep.to_rep
                    Example__increment__v1.v1__first)
                   <= i) /\
                  (i
                     <= (Standard__integer__rep.to_rep
                           Example__increment__v1.v1__last))) ->
                 ([@GP_Pretty_Ada:1039]
                  (let temp___238 =
                     Standard__integer__rep.to_rep
                       (let temp___237 =
                          ((Example__increment__S1b.of_array
                              (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                             (Standard__integer__rep.to_rep
                                Example__increment__v1.v1__first))
                            (Standard__integer__rep.to_rep
                               Example__increment__v1.v1__last) in
                        (Array__Int__Standard__integer.get
                           (Example__increment__S1b.to_array temp___237))
                          i) in
                   (((0 : int) <= temp___238) /\ (temp___238 <= (1 : int)))))))) /\
          (forall i : int.
             ((((Example__t_vector.first Example__increment__v2.v2) <= i) /\
                 (i
                    <= (Standard__integer__rep.to_rep
                          Example__increment__v1.v1__last))) ->
                ([@GP_Pretty_Ada:1057]
                 (let temp___239 =
                    Standard__integer__rep.to_rep
                      ((Array__Int__Standard__integer.get
                          (Example__t_vector.to_array
                             Example__increment__v2.v2))
                         i) in
                  (((0 : int) <= temp___239) /\ (temp___239 <= (1 : int)))))))) };
     (let temp___old_226 =
        ((Example__increment__S1b.of_array
            (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
           (Standard__integer__rep.to_rep Example__increment__v1.v1__first))
          (Standard__integer__rep.to_rep Example__increment__v1.v1__last) in
      let temp___old_223 =
        ((Example__increment__S1b.of_array
            (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
           (Standard__integer__rep.to_rep Example__increment__v1.v1__first))
          (Standard__integer__rep.to_rep Example__increment__v1.v1__last) in
      let temp___old_220 =
        ((Example__increment__S1b.of_array
            (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
           (Standard__integer__rep.to_rep Example__increment__v1.v1__first))
          (Standard__integer__rep.to_rep Example__increment__v1.v1__last) in
      (try
         ([#"example.adb" 3 0 0] ());
         ([#"example.adb" 3 0 0] ());
         ([#"example.adb" 5 0 0]
          (([#"example.adb" 5 0 0]
            (Example__increment__i.i.int__content <-
               Example__increment__from.from));
           ([#"example.adb" 5 0 0]
            assume {
              [#"example.adb" 5 0 0]
              (((((Standard__natural___axiom.dynamic_invariant
                     (Example__increment__i.i.int__content))
                    True)
                   False)
                  True)
                 True) })));
         ([#"example.adb" 7 0 0] ());
         ([@GP_Sloc:example.adb:7:21]
          [#"example.adb" 7 0 0]
          (([@GNAT-comment:Translation of an Ada loop from example.adb:7] ());
           (if ((Example__increment__i.i.int__content)
                  <= Example__increment__to.to__) then
              ([#"example.adb" 7 0 0]
               (try
                  let temp___loop_entry_210 =
                    ((Example__increment__S1b.of_array
                        (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                       (Standard__integer__rep.to_rep
                          Example__increment__v1.v1__first))
                      (Standard__integer__rep.to_rep
                         Example__increment__v1.v1__last) in
                  let temp___loop_entry_205 =
                    ((Example__increment__S1b.of_array
                        (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                       (Standard__integer__rep.to_rep
                          Example__increment__v1.v1__first))
                      (Standard__integer__rep.to_rep
                         Example__increment__v1.v1__last) in
                  let temp___loop_entry_215 =
                    ((Example__increment__S1b.of_array
                        (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                       (Standard__integer__rep.to_rep
                          Example__increment__v1.v1__first))
                      (Standard__integer__rep.to_rep
                         Example__increment__v1.v1__last) in
                  ([@GNAT-comment:While loop translating the Ada loop from example.adb:7]
                   ());
                  ([#"'@Loop 900@'example.adb" 13 0 0]
                   [#"'@Loop 900@'example.adb" 13 0 0]
                   ((([@GP_Sloc:example.adb:8:13] [#"example.adb" 8 0 0] ());
                     ([@GP_Sloc:example.adb:8:22] [#"example.adb" 8 0 0] ());
                     ([@GP_Sloc:example.adb:8:30] [#"example.adb" 8 0 0] ());
                     ([@GP_Sloc:example.adb:8:16]
                      [#"example.adb" 8 0 0]
                      [#"example.adb" 8 0 0]
                      (Example__increment__v1.v1.Array__Int__Standard__integer.map__content <-
                         (Example__increment__S1b.to_array
                            (let temp___202 =
                               ((Example__increment__S1b.of_array
                                   (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                  (Standard__integer__rep.to_rep
                                     Example__increment__v1.v1__first))
                                 (Standard__integer__rep.to_rep
                                    Example__increment__v1.v1__last) in
                             { (((Example__increment__S1b.of_array
                                    (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                   (Standard__integer__rep.to_rep
                                      Example__increment__v1.v1__first))
                                  (Standard__integer__rep.to_rep
                                     Example__increment__v1.v1__last)) with
                               Example__increment__S1b.elts =
                                 (((Array__Int__Standard__integer.set
                                      (Example__increment__S1b.to_array
                                         (((Example__increment__S1b.of_array
                                              (Example__increment__v1.v1.
                                                 Array__Int__Standard__integer.map__content))
                                             (Standard__integer__rep.to_rep
                                                Example__increment__v1.v1__first))
                                            (Standard__integer__rep.to_rep
                                               Example__increment__v1.v1__last))))
                                     (([#"example.adb" 8 0 0]
                                       assert {
                                         [#"example.adb" 8 0 0]
                                         [#"example.adb" 8 0 0]
                                         [@GP_Shape:L_1_while__v1_assign__ixdcomp]
                                         [@vc:annotation]
                                         [@comment:         V1(i) := V1(i) + V2(i);             ^ example.adb:8:13:VC_INDEX_CHECK]
                                         [@GP_Sloc:example.adb:8:13]
                                         [@GP_Reason:VC_INDEX_CHECK]
                                         [@GP_Id:3]
                                         (((Example__increment__S1b.first
                                              temp___202)
                                             <= (Example__increment__i.i.int__content)) /\
                                            ((Example__increment__i.i.int__content)
                                               <= (Example__increment__S1b.last
                                                     temp___202))) });
                                      (Example__increment__i.i.int__content)))
                                    (Standard__integer__rep.of_rep
                                       ([#"example.adb" 8 0 0]
                                        [@GP_Sloc:example.adb:8:25]
                                        [@vc:annotation]
                                        [@GP_Reason:VC_OVERFLOW_CHECK]
                                        [@comment:         V1(i) := V1(i) + V2(i);                         ^ example.adb:8:25:VC_OVERFLOW_CHECK]
                                        [@GP_Id:2]
                                        [@GP_Shape:L_1_while__v1_assign__add]
                                        (Standard__integer.range_check_
                                           ((Standard__integer__rep.to_rep
                                               (let temp___201 =
                                                  ((Example__increment__S1b.of_array
                                                      (Example__increment__v1.v1.
                                                         Array__Int__Standard__integer.map__content))
                                                     (Standard__integer__rep.to_rep
                                                        Example__increment__v1.v1__first))
                                                    (Standard__integer__rep.to_rep
                                                       Example__increment__v1.v1__last) in
                                                (Array__Int__Standard__integer.get
                                                   (Example__increment__S1b.to_array
                                                      temp___201))
                                                  (([#"example.adb" 8 0 0]
                                                    assert {
                                                      [#"example.adb" 8 0 0]
                                                      [#"example.adb" 8 0 0]
                                                      [@comment:         V1(i) := V1(i) + V2(i);                      ^ example.adb:8:22:VC_INDEX_CHECK]
                                                      [@GP_Sloc:example.adb:8:22]
                                                      [@vc:annotation]
                                                      [@GP_Shape:L_1_while__v1_assign__add__ixdcomp]
                                                      [@GP_Reason:VC_INDEX_CHECK]
                                                      [@GP_Id:0]
                                                      (((Example__increment__S1b.first
                                                           temp___201)
                                                          <= (Example__increment__i.i.int__content)) /\
                                                         ((Example__increment__i.i.int__content)
                                                            <= (Example__increment__S1b.last
                                                                  temp___201))) });
                                                   (Example__increment__i.i.int__content))))
                                              + (Standard__integer__rep.to_rep
                                                   ((Array__Int__Standard__integer.get
                                                       (Example__t_vector.to_array
                                                          Example__increment__v2.v2))
                                                      (assert {
                                                         [#"example.adb" 8 0 0]
                                                         [@comment:         V1(i) := V1(i) + V2(i);                              ^ example.adb:8:30:VC_INDEX_CHECK]
                                                         [@vc:annotation]
                                                         [@GP_Shape:L_1_while__v1_assign__add__ixdcomp]
                                                         [@GP_Reason:VC_INDEX_CHECK]
                                                         [@GP_Id:1]
                                                         [@GP_Sloc:example.adb:8:30]
                                                         (((Example__t_vector.first
                                                              Example__increment__v2.v2)
                                                             <= (Example__increment__i.i.int__content)) /\
                                                            ((Example__increment__i.i.int__content)
                                                               <= (Example__t_vector.last
                                                                    Example__increment__v2.v2))) };
                                                       (Example__increment__i.i.int__content))))))))) }))));
                     ([@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                      ());
                     (let temp___inv_213 =
                        (let j = val _f : int in
                                 _f in
                         if ((Boolean.andb
                                (Example__increment__from.from <= j))
                               (j <= (Example__increment__i.i.int__content))) then
                           (begin
                              ensures { true }
                              let _ =
                                let _ =
                                  ((Standard__integer__rep.to_rep
                                      (let temp___214 =
                                         ((Example__increment__S1b.of_array
                                             (Example__increment__v1.v1.
                                                Array__Int__Standard__integer.map__content))
                                            (Standard__integer__rep.to_rep
                                               Example__increment__v1.v1__first))
                                           (Standard__integer__rep.to_rep
                                              Example__increment__v1.v1__last) in
                                       (Array__Int__Standard__integer.get
                                          (Example__increment__S1b.to_array
                                             temp___214))
                                         (assert {
                                            [#"example.adb" 10 0 0]
                                            [@GP_Id:11]
                                            [@vc:annotation]
                                            [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                            [@GP_Sloc:example.adb:10:37]
                                            [@GP_Reason:VC_INDEX_CHECK]
                                            [@comment:                                 V1(j) = V1'Loop_Entry(j) + V2(j));                                     ^ example.adb:10:37:VC_INDEX_CHECK]
                                            (((Example__increment__S1b.first
                                                 temp___214)
                                                <= j) /\
                                               (j
                                                  <= (Example__increment__S1b.last
                                                        temp___214))) };
                                          j)))
                                     = ([#"example.adb" 10 0 0]
                                        [@comment:                                 V1(j) = V1'Loop_Entry(j) + V2(j));                                                           ^ example.adb:10:59:VC_OVERFLOW_CHECK]
                                        [@GP_Sloc:example.adb:10:59]
                                        [@GP_Id:14]
                                        [@vc:annotation]
                                        [@GP_Reason:VC_OVERFLOW_CHECK]
                                        [@GP_Shape:L_1_while__pragargs__forall__cmp__add]
                                        (Standard__integer.range_check_
                                           ((Standard__integer__rep.to_rep
                                               ((Array__Int__Standard__integer.get
                                                   (Example__increment__S1b.to_array
                                                      temp___loop_entry_215))
                                                  (([#"example.adb" 10 0 0]
                                                    assert {
                                                      [#"example.adb" 10 0 0]
                                                      [#"example.adb" 10 0 0]
                                                      [@GP_Sloc:example.adb:10:56]
                                                      [@GP_Id:12]
                                                      [@GP_Shape:L_1_while__pragargs__forall__cmp__add__ixdcomp]
                                                      [@vc:annotation]
                                                      [@GP_Reason:VC_INDEX_CHECK]
                                                      [@comment:                                 V1(j) = V1'Loop_Entry(j) + V2(j));                                                        ^ example.adb:10:56:VC_INDEX_CHECK]
                                                      (((Example__increment__S1b.first
                                                           temp___loop_entry_215)
                                                          <= j) /\
                                                         (j
                                                            <= (Example__increment__S1b.last
                                                                  temp___loop_entry_215))) });
                                                   j)))
                                              + (Standard__integer__rep.to_rep
                                                   ((Array__Int__Standard__integer.get
                                                       (Example__t_vector.to_array
                                                          Example__increment__v2.v2))
                                                      (assert {
                                                         [#"example.adb" 10 0 0]
                                                         [@GP_Id:13]
                                                         [@GP_Shape:L_1_while__pragargs__forall__cmp__add__ixdcomp]
                                                         [@vc:annotation]
                                                         [@comment:                                 V1(j) = V1'Loop_Entry(j) + V2(j));                                                                ^ example.adb:10:64:VC_INDEX_CHECK]
                                                         [@GP_Reason:VC_INDEX_CHECK]
                                                         [@GP_Sloc:example.adb:10:64]
                                                         (((Example__t_vector.first
                                                              Example__increment__v2.v2)
                                                             <= j) /\
                                                            (j
                                                               <= (Example__t_vector.last
                                                                    Example__increment__v2.v2))) };
                                                       j))))))) in
                                () in
                              ()
                            end)
                         else ());
                        (val _f : bool
                           ensures { ((result = True) <->
                                        (forall j : int.
                                           (((Example__increment__from.from
                                                <= j) /\
                                               (j
                                                  <= (Example__increment__i.i.int__content))) ->
                                              ((Standard__integer__rep.to_rep
                                                  (let temp___216 =
                                                     ((Example__increment__S1b.of_array
                                                         (Example__increment__v1.v1.
                                                            Array__Int__Standard__integer.map__content))
                                                        (Standard__integer__rep.to_rep
                                                           Example__increment__v1.v1__first))
                                                       (Standard__integer__rep.to_rep
                                                          Example__increment__v1.v1__last) in
                                                   (Array__Int__Standard__integer.get
                                                      (Example__increment__S1b.to_array
                                                         temp___216))
                                                     j))
                                                 = ((Standard__integer__rep.to_rep
                                                       ((Array__Int__Standard__integer.get
                                                           (Example__increment__S1b.to_array
                                                              temp___loop_entry_215))
                                                          j))
                                                      + (Standard__integer__rep.to_rep
                                                           ((Array__Int__Standard__integer.get
                                                               (Example__t_vector.to_array
                                                                  Example__increment__v2.v2))
                                                              j))))))) } in
                         _f) in
                      begin
                        ensures { true }
                        let _ =
                          let _ =
                            let temp___inv_208 =
                              (let j = val _f : int in
                                       _f in
                               if ((Boolean.andb
                                      (([#"example.adb" 12 0 0]
                                        [@comment:         pragma Loop_Invariant (for all j in i + 1  .. to => V1(j) = V1'Loop_Entry(j));                                                ^ example.adb:12:48:VC_OVERFLOW_CHECK]
                                        [@GP_Sloc:example.adb:12:48]
                                        [@GP_Shape:L_1_while__pragargs__forall__range__add]
                                        [@vc:annotation]
                                        [@GP_Reason:VC_OVERFLOW_CHECK]
                                        [@GP_Id:7]
                                        (Standard__integer.range_check_
                                           ((Example__increment__i.i.int__content)
                                              + (1 : int))))
                                         <= j))
                                     (j <= Example__increment__to.to__)) then
                                 (begin
                                    ensures { true }
                                    let _ =
                                      let _ =
                                        ((Standard__integer__rep.to_rep
                                            (let temp___209 =
                                               ((Example__increment__S1b.of_array
                                                   (Example__increment__v1.v1.
                                                      Array__Int__Standard__integer.map__content))
                                                  (Standard__integer__rep.to_rep
                                                     Example__increment__v1.v1__first))
                                                 (Standard__integer__rep.to_rep
                                                    Example__increment__v1.v1__last) in
                                             (Array__Int__Standard__integer.get
                                                (Example__increment__S1b.to_array
                                                   temp___209))
                                               (assert {
                                                  [#"example.adb" 12 0 0]
                                                  [@vc:annotation]
                                                  [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                                  [@GP_Sloc:example.adb:12:65]
                                                  [@comment:         pragma Loop_Invariant (for all j in i + 1  .. to => V1(j) = V1'Loop_Entry(j));                                                                 ^ example.adb:12:65:VC_INDEX_CHECK]
                                                  [@GP_Reason:VC_INDEX_CHECK]
                                                  [@GP_Id:8]
                                                  (((Example__increment__S1b.first
                                                       temp___209)
                                                      <= j) /\
                                                     (j
                                                        <= (Example__increment__S1b.last
                                                              temp___209))) };
                                                j)))
                                           = (Standard__integer__rep.to_rep
                                                ((Array__Int__Standard__integer.get
                                                    (Example__increment__S1b.to_array
                                                       temp___loop_entry_210))
                                                   (assert {
                                                      [#"example.adb" 12 0 0]
                                                      [@vc:annotation]
                                                      [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                                      [@GP_Reason:VC_INDEX_CHECK]
                                                      [@GP_Sloc:example.adb:12:84]
                                                      [@GP_Id:9]
                                                      [@comment:         pragma Loop_Invariant (for all j in i + 1  .. to => V1(j) = V1'Loop_Entry(j));                                                                                    ^ example.adb:12:84:VC_INDEX_CHECK]
                                                      (((Example__increment__S1b.first
                                                           temp___loop_entry_210)
                                                          <= j) /\
                                                         (j
                                                            <= (Example__increment__S1b.last
                                                                  temp___loop_entry_210))) };
                                                    j)))) in
                                      () in
                                    ()
                                  end)
                               else ());
                              (val _f : bool
                                 ensures { ((result = True) <->
                                              (forall j : int.
                                                 (((((Example__increment__i.i.int__content)
                                                       + (1 : int))
                                                      <= j) /\
                                                     (j
                                                        <= Example__increment__to.to__)) ->
                                                    ((Standard__integer__rep.to_rep
                                                        (let temp___211 =
                                                           ((Example__increment__S1b.of_array
                                                               (Example__increment__v1.v1.
                                                                  Array__Int__Standard__integer.map__content))
                                                              (Standard__integer__rep.to_rep
                                                                 Example__increment__v1.v1__first))
                                                             (Standard__integer__rep.to_rep
                                                                Example__increment__v1.v1__last) in
                                                         (Array__Int__Standard__integer.get
                                                            (Example__increment__S1b.to_array
                                                               temp___211))
                                                           j))
                                                       = (Standard__integer__rep.to_rep
                                                            ((Array__Int__Standard__integer.get
                                                                (Example__increment__S1b.to_array
                                                                   temp___loop_entry_210))
                                                               j)))))) } in
                               _f) in
                            begin
                              ensures { true }
                              let _ =
                                let _ =
                                  let temp___inv_207 =
                                    (Boolean.andb
                                       (Example__increment__from.from
                                          <= (Example__increment__i.i.int__content)))
                                      ((Example__increment__i.i.int__content)
                                         <= ([#"example.adb" 13 0 0]
                                             [@GP_Shape:L_1_while__pragargs__in__range__add]
                                             [@vc:annotation]
                                             [@GP_Reason:VC_OVERFLOW_CHECK]
                                             [@GP_Sloc:example.adb:13:48]
                                             [@comment:         pragma Loop_Invariant(i in From .. To + 1);                                                ^ example.adb:13:48:VC_OVERFLOW_CHECK]
                                             [@GP_Id:5]
                                             (Standard__integer.range_check_
                                                (Example__increment__to.to__
                                                   + (1 : int))))) in
                                  () in
                                () in
                              ()
                            end in
                          () in
                        ()
                      end);
                     (begin
                        ensures { true }
                        let _ =
                          let _ = Example__increment__i.i.int__content in () in
                        ()
                      end));
                    while True do
                      invariant LoopInvariant {
                        [#"example.adb" 9 0 0]
                        [@GP_Reason:VC_LOOP_INVARIANT]
                        [@GP_Id:15]
                        [@comment:         pragma Loop_Invariant(for all j in From .. i =>                                ^ example.adb:9:32:VC_LOOP_INVARIANT]
                        [@GP_Sloc:example.adb:9:32]
                        [@vc:annotation]
                        [@GP_Shape:L_1_while__pragargs__forall]
                        (forall j : int.
                           (((Example__increment__from.from <= j) /\
                               (j <= (Example__increment__i.i.int__content))) ->
                              ([@GP_Pretty_Ada:871]
                               [@GP_Sloc:example.adb:10:34]
                               ((Standard__integer__rep.to_rep
                                   (let temp___217 =
                                      ((Example__increment__S1b.of_array
                                          (Example__increment__v1.v1.
                                             Array__Int__Standard__integer.map__content))
                                         (Standard__integer__rep.to_rep
                                            Example__increment__v1.v1__first))
                                        (Standard__integer__rep.to_rep
                                           Example__increment__v1.v1__last) in
                                    (Array__Int__Standard__integer.get
                                       (Example__increment__S1b.to_array
                                          temp___217))
                                      j))
                                  = ((Standard__integer__rep.to_rep
                                        ((Array__Int__Standard__integer.get
                                            (Example__increment__S1b.to_array
                                               temp___loop_entry_215))
                                           j))
                                       + (Standard__integer__rep.to_rep
                                            ((Array__Int__Standard__integer.get
                                                (Example__t_vector.to_array
                                                   Example__increment__v2.v2))
                                               j))))))) }
                      invariant LoopInvariant {
                        [#"example.adb" 12 0 0]
                        [@GP_Id:10]
                        [@GP_Reason:VC_LOOP_INVARIANT]
                        [@GP_Sloc:example.adb:12:33]
                        [@vc:annotation]
                        [@GP_Shape:L_1_while__pragargs__forall]
                        [@comment:         pragma Loop_Invariant (for all j in i + 1  .. to => V1(j) = V1'Loop_Entry(j));                                 ^ example.adb:12:33:VC_LOOP_INVARIANT]
                        (forall j : int.
                           (((((Example__increment__i.i.int__content)
                                 + (1 : int))
                                <= j) /\
                               (j <= Example__increment__to.to__)) ->
                              ([@GP_Sloc:example.adb:12:62]
                               [@GP_Pretty_Ada:895]
                               ((Standard__integer__rep.to_rep
                                   (let temp___212 =
                                      ((Example__increment__S1b.of_array
                                          (Example__increment__v1.v1.
                                             Array__Int__Standard__integer.map__content))
                                         (Standard__integer__rep.to_rep
                                            Example__increment__v1.v1__first))
                                        (Standard__integer__rep.to_rep
                                           Example__increment__v1.v1__last) in
                                    (Array__Int__Standard__integer.get
                                       (Example__increment__S1b.to_array
                                          temp___212))
                                      j))
                                  = (Standard__integer__rep.to_rep
                                       ((Array__Int__Standard__integer.get
                                           (Example__increment__S1b.to_array
                                              temp___loop_entry_210))
                                          j)))))) }
                      invariant LoopInvariant {
                        [#"example.adb" 13 0 0]
                        [@GP_Reason:VC_LOOP_INVARIANT]
                        [@vc:annotation]
                        [@GP_Sloc:example.adb:13:32]
                        [@GP_Shape:L_1_while__pragargs__in]
                        [@comment:         pragma Loop_Invariant(i in From .. To + 1);                                ^ example.adb:13:32:VC_LOOP_INVARIANT]
                        [@GP_Id:6]
                        [@GP_Sloc:example.adb:13:32]
                        [@GP_Pretty_Ada:905]
                        ((Example__increment__from.from
                            <= (Example__increment__i.i.int__content)) /\
                           ((Example__increment__i.i.int__content)
                              <= (Example__increment__to.to__ + (1 : int)))) }
                      let loop_var___8246 =
                        Example__increment__i.i.int__content in
                      ([@GNAT-comment:gnat_ast_to_ptree: code after the loop invariant]
                       (([@GNAT-comment:Assume implicit invariants from the loop example.adb:7]
                         ());
                        assume {
                          ((((true /\
                                (((((Standard__natural___axiom.dynamic_invariant
                                       (Example__increment__i.i.int__content))
                                      True)
                                     True)
                                    True)
                                   True)) /\
                               (true /\ true)) /\
                              true) /\
                             (true /\ true)) };
                        ([@GNAT-comment:Continuation of loop after loop invariant and variant]
                         ());
                        ([@GP_Sloc:example.adb:15:10]
                         [#"example.adb" 15 0 0] ());
                        ([@GP_Sloc:example.adb:15:15]
                         [#"example.adb" 15 0 0] ());
                        ([@GP_Sloc:example.adb:15:12]
                         [#"example.adb" 15 0 0]
                         [#"example.adb" 15 0 0]
                         (Example__increment__i.i.int__content <-
                            ([#"example.adb" 15 0 0]
                             [@GP_Sloc:example.adb:15:17]
                             [@vc:annotation]
                             [@GP_Reason:VC_OVERFLOW_CHECK]
                             [@comment:         i := i + 1;                 ^ example.adb:15:17:VC_OVERFLOW_CHECK]
                             [@GP_Shape:L_1_while__i_assign__add]
                             [@GP_Id:4]
                             (Standard__integer.range_check_
                                ((Example__increment__i.i.int__content)
                                   + (1 : int))))));
                        ([@GNAT-comment:Check for the exit condition and loop statements appearing before the loop invariant of loop example.adb:7]
                         ());
                        (if (not ((Example__increment__i.i.int__content)
                                    <= Example__increment__to.to__)) then
                           (raise Example__increment__L_1.L_1)
                         else ())));
                      ([@GNAT-comment:gnat_ast_to_ptree: code before the loop invariant]
                       (([@GP_Sloc:example.adb:8:13]
                         [#"example.adb" 8 0 0] ());
                        ([@GP_Sloc:example.adb:8:22]
                         [#"example.adb" 8 0 0] ());
                        ([@GP_Sloc:example.adb:8:30]
                         [#"example.adb" 8 0 0] ());
                        ([@GP_Sloc:example.adb:8:16]
                         [#"example.adb" 8 0 0]
                         [#"example.adb" 8 0 0]
                         (Example__increment__v1.v1.Array__Int__Standard__integer.map__content <-
                            (Example__increment__S1b.to_array
                               (let temp___202 =
                                  ((Example__increment__S1b.of_array
                                      (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                     (Standard__integer__rep.to_rep
                                        Example__increment__v1.v1__first))
                                    (Standard__integer__rep.to_rep
                                       Example__increment__v1.v1__last) in
                                { (((Example__increment__S1b.of_array
                                       (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                      (Standard__integer__rep.to_rep
                                         Example__increment__v1.v1__first))
                                     (Standard__integer__rep.to_rep
                                        Example__increment__v1.v1__last)) with
                                  Example__increment__S1b.elts =
                                    (((Array__Int__Standard__integer.set
                                         (Example__increment__S1b.to_array
                                            (((Example__increment__S1b.of_array
                                                 (Example__increment__v1.v1.
                                                    Array__Int__Standard__integer.map__content))
                                                (Standard__integer__rep.to_rep
                                                   Example__increment__v1.v1__first))
                                               (Standard__integer__rep.to_rep
                                                  Example__increment__v1.v1__last))))
                                        (([#"example.adb" 8 0 0]
                                          assert {
                                            [#"example.adb" 8 0 0]
                                            [#"example.adb" 8 0 0]
                                            [@GP_Shape:L_1_while__v1_assign__ixdcomp]
                                            [@vc:annotation]
                                            [@comment:         V1(i) := V1(i) + V2(i);             ^ example.adb:8:13:VC_INDEX_CHECK]
                                            [@GP_Sloc:example.adb:8:13]
                                            [@GP_Reason:VC_INDEX_CHECK]
                                            [@GP_Id:3]
                                            (((Example__increment__S1b.first
                                                 temp___202)
                                                <= (Example__increment__i.i.int__content)) /\
                                               ((Example__increment__i.i.int__content)
                                                  <= (Example__increment__S1b.last
                                                        temp___202))) });
                                         (Example__increment__i.i.int__content)))
                                       (Standard__integer__rep.of_rep
                                          ([#"example.adb" 8 0 0]
                                           [@GP_Sloc:example.adb:8:25]
                                           [@vc:annotation]
                                           [@GP_Reason:VC_OVERFLOW_CHECK]
                                           [@comment:         V1(i) := V1(i) + V2(i);                         ^ example.adb:8:25:VC_OVERFLOW_CHECK]
                                           [@GP_Id:2]
                                           [@GP_Shape:L_1_while__v1_assign__add]
                                           (Standard__integer.range_check_
                                              ((Standard__integer__rep.to_rep
                                                  (let temp___201 =
                                                     ((Example__increment__S1b.of_array
                                                         (Example__increment__v1.v1.
                                                            Array__Int__Standard__integer.map__content))
                                                        (Standard__integer__rep.to_rep
                                                           Example__increment__v1.v1__first))
                                                       (Standard__integer__rep.to_rep
                                                          Example__increment__v1.v1__last) in
                                                   (Array__Int__Standard__integer.get
                                                      (Example__increment__S1b.to_array
                                                         temp___201))
                                                     (([#"example.adb" 8 0 0]
                                                       assert {
                                                         [#"example.adb" 8 0 0]
                                                         [#"example.adb" 8 0 0]
                                                         [@comment:         V1(i) := V1(i) + V2(i);                      ^ example.adb:8:22:VC_INDEX_CHECK]
                                                         [@GP_Sloc:example.adb:8:22]
                                                         [@vc:annotation]
                                                         [@GP_Shape:L_1_while__v1_assign__add__ixdcomp]
                                                         [@GP_Reason:VC_INDEX_CHECK]
                                                         [@GP_Id:0]
                                                         (((Example__increment__S1b.first
                                                              temp___201)
                                                             <= (Example__increment__i.i.int__content)) /\
                                                            ((Example__increment__i.i.int__content)
                                                               <= (Example__increment__S1b.last
                                                                    temp___201))) });
                                                      (Example__increment__i.i.int__content))))
                                                 + (Standard__integer__rep.to_rep
                                                      ((Array__Int__Standard__integer.get
                                                          (Example__t_vector.to_array
                                                             Example__increment__v2.v2))
                                                         (assert {
                                                            [#"example.adb" 8 0 0]
                                                            [@comment:         V1(i) := V1(i) + V2(i);                              ^ example.adb:8:30:VC_INDEX_CHECK]
                                                            [@vc:annotation]
                                                            [@GP_Shape:L_1_while__v1_assign__add__ixdcomp]
                                                            [@GP_Reason:VC_INDEX_CHECK]
                                                            [@GP_Id:1]
                                                            [@GP_Sloc:example.adb:8:30]
                                                            (((Example__t_vector.first
                                                                 Example__increment__v2.v2)
                                                                <= (Example__increment__i.i.int__content)) /\
                                                               ((Example__increment__i.i.int__content)
                                                                  <= 
                                                                  (Example__t_vector.last
                                                                    Example__increment__v2.v2))) };
                                                          (Example__increment__i.i.int__content))))))))) }))));
                        ([@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                         ());
                        (let temp___inv_213 =
                           (let j = val _f : int in
                                    _f in
                            if ((Boolean.andb
                                   (Example__increment__from.from <= j))
                                  (j
                                     <= (Example__increment__i.i.int__content))) then
                              (begin
                                 ensures { true }
                                 let _ =
                                   let _ =
                                     ((Standard__integer__rep.to_rep
                                         (let temp___214 =
                                            ((Example__increment__S1b.of_array
                                                (Example__increment__v1.v1.
                                                   Array__Int__Standard__integer.map__content))
                                               (Standard__integer__rep.to_rep
                                                  Example__increment__v1.v1__first))
                                              (Standard__integer__rep.to_rep
                                                 Example__increment__v1.v1__last) in
                                          (Array__Int__Standard__integer.get
                                             (Example__increment__S1b.to_array
                                                temp___214))
                                            (assert {
                                               [#"example.adb" 10 0 0]
                                               [@GP_Id:11]
                                               [@vc:annotation]
                                               [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                               [@GP_Sloc:example.adb:10:37]
                                               [@GP_Reason:VC_INDEX_CHECK]
                                               [@comment:                                 V1(j) = V1'Loop_Entry(j) + V2(j));                                     ^ example.adb:10:37:VC_INDEX_CHECK]
                                               (((Example__increment__S1b.first
                                                    temp___214)
                                                   <= j) /\
                                                  (j
                                                     <= (Example__increment__S1b.last
                                                           temp___214))) };
                                             j)))
                                        = ([#"example.adb" 10 0 0]
                                           [@comment:                                 V1(j) = V1'Loop_Entry(j) + V2(j));                                                           ^ example.adb:10:59:VC_OVERFLOW_CHECK]
                                           [@GP_Sloc:example.adb:10:59]
                                           [@GP_Id:14]
                                           [@vc:annotation]
                                           [@GP_Reason:VC_OVERFLOW_CHECK]
                                           [@GP_Shape:L_1_while__pragargs__forall__cmp__add]
                                           (Standard__integer.range_check_
                                              ((Standard__integer__rep.to_rep
                                                  ((Array__Int__Standard__integer.get
                                                      (Example__increment__S1b.to_array
                                                         temp___loop_entry_215))
                                                     (([#"example.adb" 10 0 0]
                                                       assert {
                                                         [#"example.adb" 10 0 0]
                                                         [#"example.adb" 10 0 0]
                                                         [@GP_Sloc:example.adb:10:56]
                                                         [@GP_Id:12]
                                                         [@GP_Shape:L_1_while__pragargs__forall__cmp__add__ixdcomp]
                                                         [@vc:annotation]
                                                         [@GP_Reason:VC_INDEX_CHECK]
                                                         [@comment:                                 V1(j) = V1'Loop_Entry(j) + V2(j));                                                        ^ example.adb:10:56:VC_INDEX_CHECK]
                                                         (((Example__increment__S1b.first
                                                              temp___loop_entry_215)
                                                             <= j) /\
                                                            (j
                                                               <= (Example__increment__S1b.last
                                                                    temp___loop_entry_215))) });
                                                      j)))
                                                 + (Standard__integer__rep.to_rep
                                                      ((Array__Int__Standard__integer.get
                                                          (Example__t_vector.to_array
                                                             Example__increment__v2.v2))
                                                         (assert {
                                                            [#"example.adb" 10 0 0]
                                                            [@GP_Id:13]
                                                            [@GP_Shape:L_1_while__pragargs__forall__cmp__add__ixdcomp]
                                                            [@vc:annotation]
                                                            [@comment:                                 V1(j) = V1'Loop_Entry(j) + V2(j));                                                                ^ example.adb:10:64:VC_INDEX_CHECK]
                                                            [@GP_Reason:VC_INDEX_CHECK]
                                                            [@GP_Sloc:example.adb:10:64]
                                                            (((Example__t_vector.first
                                                                 Example__increment__v2.v2)
                                                                <= j) /\
                                                               (j
                                                                  <= 
                                                                  (Example__t_vector.last
                                                                    Example__increment__v2.v2))) };
                                                          j))))))) in
                                   () in
                                 ()
                               end)
                            else ());
                           (val _f : bool
                              ensures { ((result = True) <->
                                           (forall j : int.
                                              (((Example__increment__from.from
                                                   <= j) /\
                                                  (j
                                                     <= (Example__increment__i.i.int__content))) ->
                                                 ((Standard__integer__rep.to_rep
                                                     (let temp___216 =
                                                        ((Example__increment__S1b.of_array
                                                            (Example__increment__v1.v1.
                                                               Array__Int__Standard__integer.map__content))
                                                           (Standard__integer__rep.to_rep
                                                              Example__increment__v1.v1__first))
                                                          (Standard__integer__rep.to_rep
                                                             Example__increment__v1.v1__last) in
                                                      (Array__Int__Standard__integer.get
                                                         (Example__increment__S1b.to_array
                                                            temp___216))
                                                        j))
                                                    = ((Standard__integer__rep.to_rep
                                                          ((Array__Int__Standard__integer.get
                                                              (Example__increment__S1b.to_array
                                                                 temp___loop_entry_215))
                                                             j))
                                                         + (Standard__integer__rep.to_rep
                                                              ((Array__Int__Standard__integer.get
                                                                  (Example__t_vector.to_array
                                                                    Example__increment__v2.v2))
                                                                 j))))))) } in
                            _f) in
                         begin
                           ensures { true }
                           let _ =
                             let _ =
                               let temp___inv_208 =
                                 (let j = val _f : int in
                                          _f in
                                  if ((Boolean.andb
                                         (([#"example.adb" 12 0 0]
                                           [@comment:         pragma Loop_Invariant (for all j in i + 1  .. to => V1(j) = V1'Loop_Entry(j));                                                ^ example.adb:12:48:VC_OVERFLOW_CHECK]
                                           [@GP_Sloc:example.adb:12:48]
                                           [@GP_Shape:L_1_while__pragargs__forall__range__add]
                                           [@vc:annotation]
                                           [@GP_Reason:VC_OVERFLOW_CHECK]
                                           [@GP_Id:7]
                                           (Standard__integer.range_check_
                                              ((Example__increment__i.i.int__content)
                                                 + (1 : int))))
                                            <= j))
                                        (j <= Example__increment__to.to__)) then
                                    (begin
                                       ensures { true }
                                       let _ =
                                         let _ =
                                           ((Standard__integer__rep.to_rep
                                               (let temp___209 =
                                                  ((Example__increment__S1b.of_array
                                                      (Example__increment__v1.v1.
                                                         Array__Int__Standard__integer.map__content))
                                                     (Standard__integer__rep.to_rep
                                                        Example__increment__v1.v1__first))
                                                    (Standard__integer__rep.to_rep
                                                       Example__increment__v1.v1__last) in
                                                (Array__Int__Standard__integer.get
                                                   (Example__increment__S1b.to_array
                                                      temp___209))
                                                  (assert {
                                                     [#"example.adb" 12 0 0]
                                                     [@vc:annotation]
                                                     [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                                     [@GP_Sloc:example.adb:12:65]
                                                     [@comment:         pragma Loop_Invariant (for all j in i + 1  .. to => V1(j) = V1'Loop_Entry(j));                                                                 ^ example.adb:12:65:VC_INDEX_CHECK]
                                                     [@GP_Reason:VC_INDEX_CHECK]
                                                     [@GP_Id:8]
                                                     (((Example__increment__S1b.first
                                                          temp___209)
                                                         <= j) /\
                                                        (j
                                                           <= (Example__increment__S1b.last
                                                                 temp___209))) };
                                                   j)))
                                              = (Standard__integer__rep.to_rep
                                                   ((Array__Int__Standard__integer.get
                                                       (Example__increment__S1b.to_array
                                                          temp___loop_entry_210))
                                                      (assert {
                                                         [#"example.adb" 12 0 0]
                                                         [@vc:annotation]
                                                         [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                                         [@GP_Reason:VC_INDEX_CHECK]
                                                         [@GP_Sloc:example.adb:12:84]
                                                         [@GP_Id:9]
                                                         [@comment:         pragma Loop_Invariant (for all j in i + 1  .. to => V1(j) = V1'Loop_Entry(j));                                                                                    ^ example.adb:12:84:VC_INDEX_CHECK]
                                                         (((Example__increment__S1b.first
                                                              temp___loop_entry_210)
                                                             <= j) /\
                                                            (j
                                                               <= (Example__increment__S1b.last
                                                                    temp___loop_entry_210))) };
                                                       j)))) in
                                         () in
                                       ()
                                     end)
                                  else ());
                                 (val _f : bool
                                    ensures { ((result = True) <->
                                                 (forall j : int.
                                                    (((((Example__increment__i.i.int__content)
                                                          + (1 : int))
                                                         <= j) /\
                                                        (j
                                                           <= Example__increment__to.to__)) ->
                                                       ((Standard__integer__rep.to_rep
                                                           (let temp___211 =
                                                              ((Example__increment__S1b.of_array
                                                                  (Example__increment__v1.v1.
                                                                    Array__Int__Standard__integer.map__content))
                                                                 (Standard__integer__rep.to_rep
                                                                    Example__increment__v1.v1__first))
                                                                (Standard__integer__rep.to_rep
                                                                   Example__increment__v1.v1__last) in
                                                            (Array__Int__Standard__integer.get
                                                               (Example__increment__S1b.to_array
                                                                  temp___211))
                                                              j))
                                                          = (Standard__integer__rep.to_rep
                                                               ((Array__Int__Standard__integer.get
                                                                   (Example__increment__S1b.to_array
                                                                    temp___loop_entry_210))
                                                                  j)))))) } in
                                  _f) in
                               begin
                                 ensures { true }
                                 let _ =
                                   let _ =
                                     let temp___inv_207 =
                                       (Boolean.andb
                                          (Example__increment__from.from
                                             <= (Example__increment__i.i.int__content)))
                                         ((Example__increment__i.i.int__content)
                                            <= ([#"example.adb" 13 0 0]
                                                [@GP_Shape:L_1_while__pragargs__in__range__add]
                                                [@vc:annotation]
                                                [@GP_Reason:VC_OVERFLOW_CHECK]
                                                [@GP_Sloc:example.adb:13:48]
                                                [@comment:         pragma Loop_Invariant(i in From .. To + 1);                                                ^ example.adb:13:48:VC_OVERFLOW_CHECK]
                                                [@GP_Id:5]
                                                (Standard__integer.range_check_
                                                   (Example__increment__to.to__
                                                      + (1 : int))))) in
                                     () in
                                   () in
                                 ()
                               end in
                             () in
                           ()
                         end);
                        (begin
                           ensures { true }
                           let _ =
                             let _ = Example__increment__i.i.int__content in
                             () in
                           ()
                         end)));
                      ([@GNAT-comment:gnat_ast_to_ptree: code checking the variants]
                       (assert {
                          [@GP_Reason:VC_LOOP_VARIANT]
                          [@GP_Id:16]
                          [@vc:annotation]
                          [@comment:         pragma Loop_Variant(increases => i);                              ^ example.adb:14:30:VC_LOOP_VARIANT]
                          [@GP_Sloc:example.adb:14:30]
                          [@GP_Shape:L_1_while__pragargs]
                          (((Example__increment__i.i.int__content)
                              > loop_var___8246)
                             ||
                             ((Example__increment__i.i.int__content)
                              =
                              loop_var___8246)
                             &&
                             False) };
                        ()))
                    done))
                with Example__increment__L_1.L_1 -> ()
                end))
            else ())));
         (raise Return__exc)
       with Return__exc -> ()
       end);
      (begin
         ensures { true }
         let _ =
           let _ =
             (((let i = val _f : int in
                        _f in
                if ((Boolean.andb (Example__increment__from.from <= i))
                      (i <= Example__increment__to.to__)) then
                  (begin
                     ensures { true }
                     let _ =
                       let _ =
                         ((Standard__integer__rep.to_rep
                             (let temp___219 =
                                ((Example__increment__S1b.of_array
                                    (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                   (Standard__integer__rep.to_rep
                                      Example__increment__v1.v1__first))
                                  (Standard__integer__rep.to_rep
                                     Example__increment__v1.v1__last) in
                              (Array__Int__Standard__integer.get
                                 (Example__increment__S1b.to_array temp___219))
                                (assert {
                                   [#"example.ads" 19 0 0]
                                   [@GP_Id:17]
                                   [@comment:       Post => (for all i in From .. To => V1(i) = V1'Old(i) + V2(i)) and then                                               ^ example.ads:19:47:VC_INDEX_CHECK]
                                   [@vc:annotation]
                                   [@GP_Reason:VC_INDEX_CHECK]
                                   [@GP_Shape:pragargs__andthen__andthen__forall__cmp__ixdcomp]
                                   [@GP_Sloc:example.ads:19:47]
                                   (((Example__increment__S1b.first
                                        temp___219)
                                       <= i) /\
                                      (i
                                         <= (Example__increment__S1b.last
                                               temp___219))) };
                                 i)))
                            = ([#"example.ads" 19 0 0]
                               [@comment:       Post => (for all i in From .. To => V1(i) = V1'Old(i) + V2(i)) and then                                                              ^ example.ads:19:62:VC_OVERFLOW_CHECK]
                               [@GP_Shape:pragargs__andthen__andthen__forall__cmp__add]
                               [@GP_Sloc:example.ads:19:62]
                               [@vc:annotation]
                               [@GP_Reason:VC_OVERFLOW_CHECK]
                               [@GP_Id:20]
                               (Standard__integer.range_check_
                                  ((Standard__integer__rep.to_rep
                                      ((Array__Int__Standard__integer.get
                                          (Example__increment__S1b.to_array
                                             temp___old_220))
                                         (([#"example.ads" 19 0 0]
                                           assert {
                                             [#"example.ads" 19 0 0]
                                             [#"example.ads" 19 0 0]
                                             [@GP_Id:18]
                                             [@vc:annotation]
                                             [@comment:       Post => (for all i in From .. To => V1(i) = V1'Old(i) + V2(i)) and then                                                           ^ example.ads:19:59:VC_INDEX_CHECK]
                                             [@GP_Shape:pragargs__andthen__andthen__forall__cmp__add__ixdcomp]
                                             [@GP_Sloc:example.ads:19:59]
                                             [@GP_Reason:VC_INDEX_CHECK]
                                             (((Example__increment__S1b.first
                                                  temp___old_220)
                                                 <= i) /\
                                                (i
                                                   <= (Example__increment__S1b.last
                                                         temp___old_220))) });
                                          i)))
                                     + (Standard__integer__rep.to_rep
                                          ((Array__Int__Standard__integer.get
                                              (Example__t_vector.to_array
                                                 Example__increment__v2.v2))
                                             (assert {
                                                [#"example.ads" 19 0 0]
                                                [@GP_Sloc:example.ads:19:67]
                                                [@GP_Id:19]
                                                [@vc:annotation]
                                                [@GP_Shape:pragargs__andthen__andthen__forall__cmp__add__ixdcomp]
                                                [@GP_Reason:VC_INDEX_CHECK]
                                                [@comment:       Post => (for all i in From .. To => V1(i) = V1'Old(i) + V2(i)) and then                                                                   ^ example.ads:19:67:VC_INDEX_CHECK]
                                                (((Example__t_vector.first
                                                     Example__increment__v2.v2)
                                                    <= i) /\
                                                   (i
                                                      <= (Example__t_vector.last
                                                            Example__increment__v2.v2))) };
                                              i))))))) in
                       () in
                     ()
                   end)
                else ());
               (val _f : bool
                  ensures { ((result = True) <->
                               (forall i : int.
                                  (((Example__increment__from.from <= i) /\
                                      (i <= Example__increment__to.to__)) ->
                                     ([@GP_Pretty_Ada:1073]
                                      ((Standard__integer__rep.to_rep
                                          (let temp___221 =
                                             ((Example__increment__S1b.of_array
                                                 (Example__increment__v1.v1.
                                                    Array__Int__Standard__integer.map__content))
                                                (Standard__integer__rep.to_rep
                                                   Example__increment__v1.v1__first))
                                               (Standard__integer__rep.to_rep
                                                  Example__increment__v1.v1__last) in
                                           (Array__Int__Standard__integer.get
                                              (Example__increment__S1b.to_array
                                                 temp___221))
                                             i))
                                         = ((Standard__integer__rep.to_rep
                                               ((Array__Int__Standard__integer.get
                                                   (Example__increment__S1b.to_array
                                                      temp___old_220))
                                                  i))
                                              + (Standard__integer__rep.to_rep
                                                   ((Array__Int__Standard__integer.get
                                                       (Example__t_vector.to_array
                                                          Example__increment__v2.v2))
                                                      i)))))))) } in
                _f))
               &&
                ((let i = val _f : int in
                          _f in
                  if ((Boolean.andb
                         ((Standard__integer__rep.to_rep
                             ((begin
                                 ensures { true }
                                 let _ =
                                   let _ =
                                     ((Example__increment__S1b.of_array
                                         (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                        (Standard__integer__rep.to_rep
                                           Example__increment__v1.v1__first))
                                       (Standard__integer__rep.to_rep
                                          Example__increment__v1.v1__last) in
                                   () in
                                 ()
                               end);
                              Example__increment__v1.v1__first))
                            <= i))
                        (i <= (Example__increment__from.from - (1 : int)))) then
                    (begin
                       ensures { true }
                       let _ =
                         let _ =
                           ((Standard__integer__rep.to_rep
                               (let temp___222 =
                                  ((Example__increment__S1b.of_array
                                      (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                     (Standard__integer__rep.to_rep
                                        Example__increment__v1.v1__first))
                                    (Standard__integer__rep.to_rep
                                       Example__increment__v1.v1__last) in
                                (Array__Int__Standard__integer.get
                                   (Example__increment__S1b.to_array
                                      temp___222))
                                  (assert {
                                     [#"example.ads" 20 0 0]
                                     [@GP_Sloc:example.ads:20:49]
                                     [@vc:annotation]
                                     [@GP_Reason:VC_INDEX_CHECK]
                                     [@comment:       (for all i in V1'First .. From - 1 => V1(i) = V1'Old(i)) and then                                                 ^ example.ads:20:49:VC_INDEX_CHECK]
                                     [@GP_Shape:pragargs__andthen__andthen__forall__cmp__ixdcomp]
                                     [@GP_Id:21]
                                     (((Example__increment__S1b.first
                                          temp___222)
                                         <= i) /\
                                        (i
                                           <= (Example__increment__S1b.last
                                                 temp___222))) };
                                   i)))
                              = (Standard__integer__rep.to_rep
                                   ((Array__Int__Standard__integer.get
                                       (Example__increment__S1b.to_array
                                          temp___old_223))
                                      (assert {
                                         [#"example.ads" 20 0 0]
                                         [@comment:       (for all i in V1'First .. From - 1 => V1(i) = V1'Old(i)) and then                                                             ^ example.ads:20:61:VC_INDEX_CHECK]
                                         [@vc:annotation]
                                         [@GP_Sloc:example.ads:20:61]
                                         [@GP_Reason:VC_INDEX_CHECK]
                                         [@GP_Shape:pragargs__andthen__andthen__forall__cmp__ixdcomp]
                                         [@GP_Id:22]
                                         (((Example__increment__S1b.first
                                              temp___old_223)
                                             <= i) /\
                                            (i
                                               <= (Example__increment__S1b.last
                                                     temp___old_223))) };
                                       i)))) in
                         () in
                       ()
                     end)
                  else ());
                 (val _f : bool
                    ensures { ((result = True) <->
                                 (forall i : int.
                                    ((((Standard__integer__rep.to_rep
                                          Example__increment__v1.v1__first)
                                         <= i) /\
                                        (i
                                           <= (Example__increment__from.from
                                                 - (1 : int)))) ->
                                       ([@GP_Pretty_Ada:1097]
                                        ((Standard__integer__rep.to_rep
                                            (let temp___224 =
                                               ((Example__increment__S1b.of_array
                                                   (Example__increment__v1.v1.
                                                      Array__Int__Standard__integer.map__content))
                                                  (Standard__integer__rep.to_rep
                                                     Example__increment__v1.v1__first))
                                                 (Standard__integer__rep.to_rep
                                                    Example__increment__v1.v1__last) in
                                             (Array__Int__Standard__integer.get
                                                (Example__increment__S1b.to_array
                                                   temp___224))
                                               i))
                                           = (Standard__integer__rep.to_rep
                                                ((Array__Int__Standard__integer.get
                                                    (Example__increment__S1b.to_array
                                                       temp___old_223))
                                                   i))))))) } in
                  _f)))
              &&
               ((let i = val _f : int in
                         _f in
                 if ((Boolean.andb
                        (([#"example.ads" 21 0 0]
                          [@GP_Sloc:example.ads:21:27]
                          [@comment:       (for all i in From +1 .. V1'Last => V1(i) = V1'Old(i));                           ^ example.ads:21:27:VC_OVERFLOW_CHECK]
                          [@vc:annotation]
                          [@GP_Reason:VC_OVERFLOW_CHECK]
                          [@GP_Id:23]
                          [@GP_Shape:pragargs__andthen__forall__range__add]
                          (Standard__integer.range_check_
                             (Example__increment__from.from + (1 : int))))
                           <= i))
                       (i
                          <= (Standard__integer__rep.to_rep
                                ((begin
                                    ensures { true }
                                    let _ =
                                      let _ =
                                        ((Example__increment__S1b.of_array
                                            (Example__increment__v1.v1.
                                               Array__Int__Standard__integer.map__content))
                                           (Standard__integer__rep.to_rep
                                              Example__increment__v1.v1__first))
                                          (Standard__integer__rep.to_rep
                                             Example__increment__v1.v1__last) in
                                      () in
                                    ()
                                  end);
                                 Example__increment__v1.v1__last)))) then
                   (begin
                      ensures { true }
                      let _ =
                        let _ =
                          ((Standard__integer__rep.to_rep
                              (let temp___225 =
                                 ((Example__increment__S1b.of_array
                                     (Example__increment__v1.v1.Array__Int__Standard__integer.map__content))
                                    (Standard__integer__rep.to_rep
                                       Example__increment__v1.v1__first))
                                   (Standard__integer__rep.to_rep
                                      Example__increment__v1.v1__last) in
                               (Array__Int__Standard__integer.get
                                  (Example__increment__S1b.to_array
                                     temp___225))
                                 (assert {
                                    [#"example.ads" 21 0 0]
                                    [@GP_Shape:pragargs__andthen__forall__cmp__ixdcomp]
                                    [@vc:annotation]
                                    [@GP_Sloc:example.ads:21:47]
                                    [@comment:       (for all i in From +1 .. V1'Last => V1(i) = V1'Old(i));                                               ^ example.ads:21:47:VC_INDEX_CHECK]
                                    [@GP_Reason:VC_INDEX_CHECK]
                                    [@GP_Id:24]
                                    (((Example__increment__S1b.first
                                         temp___225)
                                        <= i) /\
                                       (i
                                          <= (Example__increment__S1b.last
                                                temp___225))) };
                                  i)))
                             = (Standard__integer__rep.to_rep
                                  ((Array__Int__Standard__integer.get
                                      (Example__increment__S1b.to_array
                                         temp___old_226))
                                     (assert {
                                        [#"example.ads" 21 0 0]
                                        [@GP_Shape:pragargs__andthen__forall__cmp__ixdcomp]
                                        [@GP_Sloc:example.ads:21:59]
                                        [@vc:annotation]
                                        [@GP_Reason:VC_INDEX_CHECK]
                                        [@comment:       (for all i in From +1 .. V1'Last => V1(i) = V1'Old(i));                                                           ^ example.ads:21:59:VC_INDEX_CHECK]
                                        [@GP_Id:25]
                                        (((Example__increment__S1b.first
                                             temp___old_226)
                                            <= i) /\
                                           (i
                                              <= (Example__increment__S1b.last
                                                    temp___old_226))) };
                                      i)))) in
                        () in
                      ()
                    end)
                 else ());
                (val _f : bool
                   ensures { ((result = True) <->
                                (forall i : int.
                                   ((((Example__increment__from.from
                                         + (1 : int))
                                        <= i) /\
                                       (i
                                          <= (Standard__integer__rep.to_rep
                                                Example__increment__v1.v1__last))) ->
                                      ([@GP_Pretty_Ada:1117]
                                       ((Standard__integer__rep.to_rep
                                           (let temp___227 =
                                              ((Example__increment__S1b.of_array
                                                  (Example__increment__v1.v1.
                                                     Array__Int__Standard__integer.map__content))
                                                 (Standard__integer__rep.to_rep
                                                    Example__increment__v1.v1__first))
                                                (Standard__integer__rep.to_rep
                                                   Example__increment__v1.v1__last) in
                                            (Array__Int__Standard__integer.get
                                               (Example__increment__S1b.to_array
                                                  temp___227))
                                              i))
                                          = (Standard__integer__rep.to_rep
                                               ((Array__Int__Standard__integer.get
                                                   (Example__increment__S1b.to_array
                                                      temp___old_226))
                                                  i))))))) } in
                 _f)) in
           () in
         ()
       end)))
end
