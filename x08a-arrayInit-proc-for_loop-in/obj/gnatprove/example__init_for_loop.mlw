module Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type integer = <range -2147483648 2147483647>
  
  val function first : int
    ensures { result = ((- 2147483648) : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = integer,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type integer__ref = { mutable integer__content : integer }
  
  function integer__ref_integer__content__projection (a: integer__ref) : integer =
    a.integer__content
  
  meta "model_projection" function integer__ref_integer__content__projection
  
  meta "inline:no" function integer__ref_integer__content__projection
  
  val integer__havoc (x: integer__ref) : unit
    writes { x }
end

module Standard__integer___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  
  predicate dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) =
    if ((temp___is_init_14 = True) \/
          (Standard__integer.first <= Standard__integer.last)) then
      (((Standard__integer.dynamic_property Standard__integer.first)
          Standard__integer.last)
         temp___expr_18)
    else true
  
  val dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_18 : int))
                      (temp___is_init_14 : bool))
                     (temp___skip_constant_15 : bool))
                    (temp___do_toplevel_16 : bool))
                   (temp___do_typ_inv_17 : bool)) }
  
  predicate default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) =
    true
  
  val default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_19 : int))
                   (temp___skip_top_level_20 : bool)) }
end

module Standard__integer__rep
  use Standard__integer as Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Standard__integer.integer) : int =
    Standard__integer.integer'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Standard__positive
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type positive = <range 1 2147483647>
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = positive,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type positive__ref = { mutable positive__content : positive }
  
  function positive__ref_positive__content__projection (a: positive__ref) : positive =
    a.positive__content
  
  meta "model_projection" function positive__ref_positive__content__projection
  
  meta "inline:no" function positive__ref_positive__content__projection
  
  val positive__havoc (x: positive__ref) : unit
    writes { x }
end

module Standard__positive___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__positive as Standard__positive
  
  predicate dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) =
    if ((temp___is_init_49 = True) \/
          (Standard__positive.first <= Standard__positive.last)) then
      (((Standard__positive.dynamic_property Standard__positive.first)
          Standard__positive.last)
         temp___expr_53)
    else true
  
  val dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_53 : int))
                      (temp___is_init_49 : bool))
                     (temp___skip_constant_50 : bool))
                    (temp___do_toplevel_51 : bool))
                   (temp___do_typ_inv_52 : bool)) }
  
  predicate default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) =
    true
  
  val default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_54 : int))
                   (temp___skip_top_level_55 : bool)) }
end

module Array__Int__Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__integer__rep as Standard__integer__rep
  
  function index_I1_one : int = 1 : int
  
  type component_type = Standard__integer.integer
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_161 : int.
          if ((a__first <= temp___idx_161) /\ (temp___idx_161 <= a__last)) then
            ((Standard__integer__rep.to_rep ((get a) temp___idx_161))
               = (Standard__integer__rep.to_rep
                    ((get b) ((b__first - a__first) + temp___idx_161))))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_161 : int.
                 if ((a__first <= temp___idx_161) /\
                       (temp___idx_161 <= a__last)) then
                   ((Standard__integer__rep.to_rep ((get a) temp___idx_161))
                      = (Standard__integer__rep.to_rep
                           ((get b) ((b__first - a__first) + temp___idx_161))))
                 else true)))
end

module Example__init_for_loop__v
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer as Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  val v : Array__Int__Standard__integer.map__ref
  
  val function v__first : Standard__integer.integer
  
  val function v__last : Standard__integer.integer
end

module Example__init_for_loop__value
  use _gnatprove_standard.Main
  use int.Int
  
  val function value : int
end

module Example__init_for_loop__i
  use _gnatprove_standard.Main
  use int.Int
  
  val i : int__ref
end

module Example__t_vector
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__integer as Standard__integer
  use Standard__positive as Standard__positive
  use Standard__integer__rep as Standard__integer__rep
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  type component_type = Standard__integer.integer
  
  function index_1_id (x: int) : int = x
  
  clone export ada__model.Unconstr_Array with
    axiom .,
    type map = Array__Int__Standard__integer.map,
    function array_bool_eq = Array__Int__Standard__integer.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = Int.( <= )
  
  type t_vector = __t
  
  meta "model_projection" function to_array
  
  meta "inline:no" function to_array
  
  meta "model_projection" function first
  
  meta "inline:no" function first
  
  meta "model_projection" function last
  
  meta "inline:no" function last
  
  type t_vector__ref = { mutable t_vector__content : t_vector }
  
  function t_vector__ref_t_vector__content__projection (a: t_vector__ref) : t_vector =
    a.t_vector__content
  
  meta "model_projection" function t_vector__ref_t_vector__content__projection
  
  meta "inline:no" function t_vector__ref_t_vector__content__projection
  
  val t_vector__havoc (x: t_vector__ref) : unit
    writes { x }
end

module Example__init_for_loop__S1b
  use export Example__t_vector
  use _gnatprove_standard.Main
  use int.Int
  
  type s1b = t_vector
  
  type s1b__ref = { mutable s1b__content : s1b }
  
  function s1b__ref_s1b__content__projection (a: s1b__ref) : s1b =
    a.s1b__content
  
  meta "model_projection" function s1b__ref_s1b__content__projection
  
  meta "inline:no" function s1b__ref_s1b__content__projection
  
  val s1b__havoc (x: s1b__ref) : unit
    writes { x }
end

module Example__init_for_loop__L_1
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_1
end

module Example__init_for_loop__i___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Example__init_for_loop__L_1___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Example__t_vector___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__positive as Standard__positive
  use Example__t_vector as Example__t_vector
  
  predicate dynamic_invariant (temp___expr_166: Example__t_vector.t_vector) (temp___is_init_162: bool) (temp___skip_constant_163: bool) (temp___do_toplevel_164: bool) (temp___do_typ_inv_165: bool) =
    if temp___skip_constant_163 then true
    else
      ((((Example__t_vector.dynamic_property Standard__positive.first)
           Standard__positive.last)
          (Example__t_vector.first temp___expr_166))
         (Example__t_vector.last temp___expr_166))
  
  val dynamic_invariant (temp___expr_166: Example__t_vector.t_vector) (temp___is_init_162: bool) (temp___skip_constant_163: bool) (temp___do_toplevel_164: bool) (temp___do_typ_inv_165: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_166 : Example__t_vector.t_vector))
                      (temp___is_init_162 : bool))
                     (temp___skip_constant_163 : bool))
                    (temp___do_toplevel_164 : bool))
                   (temp___do_typ_inv_165 : bool)) }
end

module Example__init_for_loop__v___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Example__init_for_loop__value___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Example__init_for_loop__S1b___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer__rep as Standard__integer__rep
  use Example__init_for_loop__v as Example__init_for_loop__v
  use Example__init_for_loop__S1b as Example__init_for_loop__S1b
  
  predicate dynamic_invariant (temp___expr_175: Example__init_for_loop__S1b.s1b) (temp___is_init_171: bool) (temp___skip_constant_172: bool) (temp___do_toplevel_173: bool) (temp___do_typ_inv_174: bool) =
    if temp___skip_constant_172 then true
    else
      ((((((Example__init_for_loop__S1b.dynamic_property
              (Standard__integer__rep.to_rep
                 Example__init_for_loop__v.v__first))
             (Standard__integer__rep.to_rep Example__init_for_loop__v.v__last))
            (Example__init_for_loop__S1b.first temp___expr_175))
           (Example__init_for_loop__S1b.last temp___expr_175)) /\
          ((Example__init_for_loop__S1b.first temp___expr_175)
             = (Standard__integer__rep.to_rep
                  Example__init_for_loop__v.v__first))) /\
         ((Example__init_for_loop__S1b.last temp___expr_175)
            = (Standard__integer__rep.to_rep
                 Example__init_for_loop__v.v__last)))
  
  val dynamic_invariant (temp___expr_175: Example__init_for_loop__S1b.s1b) (temp___is_init_171: bool) (temp___skip_constant_172: bool) (temp___do_toplevel_173: bool) (temp___do_typ_inv_174: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_175 : Example__init_for_loop__S1b.s1b))
                      (temp___is_init_171 : bool))
                     (temp___skip_constant_172 : bool))
                    (temp___do_toplevel_173 : bool))
                   (temp___do_typ_inv_174 : bool)) }
  
  predicate default_initial_assumption (temp___expr_177: Example__init_for_loop__S1b.s1b) (temp___skip_top_level_178: bool) =
    ((true /\
        ((Example__init_for_loop__S1b.first temp___expr_177)
           = (Standard__integer__rep.to_rep
                Example__init_for_loop__v.v__first))) /\
       ((Example__init_for_loop__S1b.last temp___expr_177)
          = (Standard__integer__rep.to_rep Example__init_for_loop__v.v__last)))
  
  val default_initial_assumption (temp___expr_177: Example__init_for_loop__S1b.s1b) (temp___skip_top_level_178: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_177 : Example__init_for_loop__S1b.s1b))
                   (temp___skip_top_level_178 : bool)) }
end

module Example__init_for_loop__subprogram_def
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Integer as Integer
  use _gnatprove_standard.Boolean as Boolean
  use Standard__integer as Standard__integer
  use Standard__integer as Standard__integer
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__integer__rep as Standard__integer__rep
  use Standard__positive as Standard__positive
  use Standard__positive___axiom as Standard__positive___axiom
  use Standard__integer__rep as Standard__integer__rep
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Example__init_for_loop__v as Example__init_for_loop__v
  use Example__init_for_loop__value as Example__init_for_loop__value
  use Example__init_for_loop__i as Example__init_for_loop__i
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Example__t_vector as Example__t_vector
  use Example__init_for_loop__S1b as Example__init_for_loop__S1b
  use Example__init_for_loop__L_1 as Example__init_for_loop__L_1
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__positive___axiom as Standard__positive___axiom
  use Standard__integer___axiom as Standard__integer___axiom
  use Example__init_for_loop__i___axiom as Example__init_for_loop__i___axiom
  use Example__init_for_loop__L_1___axiom as Example__init_for_loop__L_1___axiom
  use Example__t_vector___axiom as Example__t_vector___axiom
  use Example__init_for_loop__v___axiom as Example__init_for_loop__v___axiom
  use Example__init_for_loop__value___axiom as Example__init_for_loop__value___axiom
  use Example__init_for_loop__S1b___axiom as Example__init_for_loop__S1b___axiom
  
  let def (__void_param : unit)
    requires { [#"example.ads" 6 0 0] true }
    ensures { [#"example.ads" 6 0 0]
              [#"example.ads" 10 0 0]
              [@GP_Shape:pragargs__forall]
              [@GP_Reason:VC_POSTCONDITION]
              [@GP_Id:12]
              [@comment:     Post => (for all j in V'Range => V(j) = Value);              ^ example.ads:10:14:VC_POSTCONDITION]
              [@model_vc_post]
              [@GP_Sloc:example.ads:10:14]
              (forall j : int.
                 ((((Standard__integer__rep.to_rep
                       Example__init_for_loop__v.v__first)
                      <= j) /\
                     (j
                        <= (Standard__integer__rep.to_rep
                              Example__init_for_loop__v.v__last))) ->
                    ([@GP_Sloc:example.ads:10:39]
                     [@GP_Pretty_Ada:979]
                     ((Standard__integer__rep.to_rep
                         (let temp___202 =
                            ((Example__init_for_loop__S1b.of_array
                                (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                               (Standard__integer__rep.to_rep
                                  Example__init_for_loop__v.v__first))
                              (Standard__integer__rep.to_rep
                                 Example__init_for_loop__v.v__last) in
                          (Array__Int__Standard__integer.get
                             (Example__init_for_loop__S1b.to_array temp___202))
                            j))
                        = Example__init_for_loop__value.value)))) }
  = [@vc:divergent]
    (([@GNAT-comment:Assume dynamic invariants of inputs of the subprogram example.ads:6]
      ());
     assume {
       if False then true
       else
         ((((Example__t_vector.dynamic_property Standard__positive.first)
              Standard__positive.last)
             (Example__init_for_loop__S1b.first
                (((Example__init_for_loop__S1b.of_array
                     (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                    (Standard__integer__rep.to_rep
                       Example__init_for_loop__v.v__first))
                   (Standard__integer__rep.to_rep
                      Example__init_for_loop__v.v__last))))
            (Example__init_for_loop__S1b.last
               (((Example__init_for_loop__S1b.of_array
                    (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                   (Standard__integer__rep.to_rep
                      Example__init_for_loop__v.v__first))
                  (Standard__integer__rep.to_rep
                     Example__init_for_loop__v.v__last)))) };
     assume {
       ((((Standard__integer___axiom.dynamic_invariant
             Example__init_for_loop__value.value)
            True)
           False)
          True)
         True };
     ([@GNAT-comment:Assume moved pointers in outputs of the subprogram example.ads:6]
      ());
     ([@GNAT-comment:Check for RTE in the Pre of the subprogram example.ads:6]
      ());
     (begin
        ensures { true }
        let _ =
          let _ =
            (((begin
                 ensures { true }
                 let _ =
                   let _ =
                     ((Example__init_for_loop__S1b.of_array
                         (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                        (Standard__integer__rep.to_rep
                           Example__init_for_loop__v.v__first))
                       (Standard__integer__rep.to_rep
                          Example__init_for_loop__v.v__last) in
                   () in
                 ()
               end);
              ((Integer.length
                  (Standard__integer__rep.to_rep
                     Example__init_for_loop__v.v__first))
                 (Standard__integer__rep.to_rep
                    Example__init_for_loop__v.v__last)))
               > (0 : int))
             &&
              ((Standard__integer__rep.to_rep
                  ((begin
                      ensures { true }
                      let _ =
                        let _ =
                          ((Example__init_for_loop__S1b.of_array
                              (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                             (Standard__integer__rep.to_rep
                                Example__init_for_loop__v.v__first))
                            (Standard__integer__rep.to_rep
                               Example__init_for_loop__v.v__last) in
                        () in
                      ()
                    end);
                   Example__init_for_loop__v.v__last))
                 < (2147483647 : int)) in
          () in
        ()
      end);
     ([@GNAT-comment:Assume Pre of the subprogram example.ads:6] ());
     assume {
       (([@GP_Pretty_Ada:958]
         (((Integer.length
              (Standard__integer__rep.to_rep
                 Example__init_for_loop__v.v__first))
             (Standard__integer__rep.to_rep Example__init_for_loop__v.v__last))
            > (0 : int))) /\
          ([@GP_Pretty_Ada:964]
           ((Standard__integer__rep.to_rep Example__init_for_loop__v.v__last)
              < (2147483647 : int)))) };
     (try
        ([#"example.adb" 3 0 0] ());
        ([#"example.adb" 4 0 0]
         (([#"example.adb" 4 0 0]
           (Example__init_for_loop__i.i.int__content <-
              ([#"example.adb" 4 0 0]
               [@vc:annotation]
               [@GP_Shape:i_decl__first_ref]
               [@GP_Sloc:example.adb:4:20]
               [@GP_Reason:VC_RANGE_CHECK]
               [@GP_Id:0]
               [@comment:   i :Positive := V'First;                    ^ example.adb:4:20:VC_RANGE_CHECK]
               (Standard__positive.range_check_
                  (Standard__integer__rep.to_rep
                     (([#"example.adb" 4 0 0]
                       (begin
                          ensures { true }
                          let _ =
                            let _ =
                              ((Example__init_for_loop__S1b.of_array
                                  (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                                 (Standard__integer__rep.to_rep
                                    Example__init_for_loop__v.v__first))
                                (Standard__integer__rep.to_rep
                                   Example__init_for_loop__v.v__last) in
                            () in
                          ()
                        end));
                      Example__init_for_loop__v.v__first))))));
          assume {
            ((((Standard__positive___axiom.dynamic_invariant
                  (Example__init_for_loop__i.i.int__content))
                 True)
                False)
               True)
              True }));
        ([#"example.adb" 6 0 0] ());
        ([@GP_Sloc:example.adb:6:25]
         [#"example.adb" 6 0 0]
         (([@GNAT-comment:Translation of an Ada loop from example.adb:6] ());
          (if ((Example__init_for_loop__i.i.int__content)
                 <= (Standard__integer__rep.to_rep
                       (([#"example.adb" 6 0 0]
                         (begin
                            ensures { true }
                            let _ =
                              let _ =
                                ((Example__init_for_loop__S1b.of_array
                                    (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                                   (Standard__integer__rep.to_rep
                                      Example__init_for_loop__v.v__first))
                                  (Standard__integer__rep.to_rep
                                     Example__init_for_loop__v.v__last) in
                              () in
                            ()
                          end));
                        Example__init_for_loop__v.v__last))) then
             ([#"example.adb" 6 0 0]
              (try
                 let temp___loop_entry_190 =
                   ((Example__init_for_loop__S1b.of_array
                       (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                      (Standard__integer__rep.to_rep
                         Example__init_for_loop__v.v__first))
                     (Standard__integer__rep.to_rep
                        Example__init_for_loop__v.v__last) in
                 let temp___loop_entry_185 =
                   ((Example__init_for_loop__S1b.of_array
                       (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                      (Standard__integer__rep.to_rep
                         Example__init_for_loop__v.v__first))
                     (Standard__integer__rep.to_rep
                        Example__init_for_loop__v.v__last) in
                 ([@GNAT-comment:While loop translating the Ada loop from example.adb:6]
                  ());
                 ([#"'@Loop 893@'example.adb" 12 0 0]
                  [#"'@Loop 893@'example.adb" 12 0 0]
                  ((([@GP_Sloc:example.adb:7:12] [#"example.adb" 7 0 0] ());
                    ([@GP_Sloc:example.adb:7:15]
                     [#"example.adb" 7 0 0]
                     [#"example.adb" 7 0 0]
                     (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content <-
                        (Example__init_for_loop__S1b.to_array
                           (let temp___182 =
                              ((Example__init_for_loop__S1b.of_array
                                  (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                                 (Standard__integer__rep.to_rep
                                    Example__init_for_loop__v.v__first))
                                (Standard__integer__rep.to_rep
                                   Example__init_for_loop__v.v__last) in
                            { (((Example__init_for_loop__S1b.of_array
                                   (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                                  (Standard__integer__rep.to_rep
                                     Example__init_for_loop__v.v__first))
                                 (Standard__integer__rep.to_rep
                                    Example__init_for_loop__v.v__last)) with
                              Example__init_for_loop__S1b.elts =
                                (((Array__Int__Standard__integer.set
                                     (Example__init_for_loop__S1b.to_array
                                        (((Example__init_for_loop__S1b.of_array
                                             (Example__init_for_loop__v.v.
                                                Array__Int__Standard__integer.map__content))
                                            (Standard__integer__rep.to_rep
                                               Example__init_for_loop__v.v__first))
                                           (Standard__integer__rep.to_rep
                                              Example__init_for_loop__v.v__last))))
                                    (([#"example.adb" 7 0 0]
                                      assert {
                                        [#"example.adb" 7 0 0]
                                        [#"example.adb" 7 0 0]
                                        [@GP_Sloc:example.adb:7:12]
                                        [@vc:annotation]
                                        [@GP_Shape:L_1_while__v_assign__ixdcomp]
                                        [@GP_Reason:VC_INDEX_CHECK]
                                        [@GP_Id:1]
                                        [@comment:         V(i) := Value;            ^ example.adb:7:12:VC_INDEX_CHECK]
                                        (((Example__init_for_loop__S1b.first
                                             temp___182)
                                            <= (Example__init_for_loop__i.i.int__content)) /\
                                           ((Example__init_for_loop__i.i.int__content)
                                              <= (Example__init_for_loop__S1b.last
                                                    temp___182))) });
                                     (Example__init_for_loop__i.i.int__content)))
                                   (Standard__integer__rep.of_rep
                                      Example__init_for_loop__value.value)) }))));
                    ([@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                     ());
                    (let temp___inv_193 =
                       (let j = val _f : int in
                                _f in
                        if ((Boolean.andb
                               ((Standard__integer__rep.to_rep
                                   ((begin
                                       ensures { true }
                                       let _ =
                                         let _ =
                                           ((Example__init_for_loop__S1b.of_array
                                               (Example__init_for_loop__v.v.
                                                  Array__Int__Standard__integer.map__content))
                                              (Standard__integer__rep.to_rep
                                                 Example__init_for_loop__v.v__first))
                                             (Standard__integer__rep.to_rep
                                                Example__init_for_loop__v.v__last) in
                                         () in
                                       ()
                                     end);
                                    Example__init_for_loop__v.v__first))
                                  <= j))
                              (j
                                 <= (Example__init_for_loop__i.i.int__content))) then
                          (begin
                             ensures { true }
                             let _ =
                               let _ =
                                 ((Standard__integer__rep.to_rep
                                     (let temp___194 =
                                        ((Example__init_for_loop__S1b.of_array
                                            (Example__init_for_loop__v.v.
                                               Array__Int__Standard__integer.map__content))
                                           (Standard__integer__rep.to_rep
                                              Example__init_for_loop__v.v__first))
                                          (Standard__integer__rep.to_rep
                                             Example__init_for_loop__v.v__last) in
                                      (Array__Int__Standard__integer.get
                                         (Example__init_for_loop__S1b.to_array
                                            temp___194))
                                        (assert {
                                           [#"example.adb" 10 0 0]
                                           [@comment:         pragma Loop_Invariant (for all j in V'First..i => V(j) = Value);                                                              ^ example.adb:10:62:VC_INDEX_CHECK]
                                           [@vc:annotation]
                                           [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                           [@GP_Sloc:example.adb:10:62]
                                           [@GP_Reason:VC_INDEX_CHECK]
                                           [@GP_Id:8]
                                           (((Example__init_for_loop__S1b.first
                                                temp___194)
                                               <= j) /\
                                              (j
                                                 <= (Example__init_for_loop__S1b.last
                                                       temp___194))) };
                                         j)))
                                    = Example__init_for_loop__value.value) in
                               () in
                             ()
                           end)
                        else ());
                       (val _f : bool
                          ensures { ((result = True) <->
                                       (forall j : int.
                                          ((((Standard__integer__rep.to_rep
                                                Example__init_for_loop__v.v__first)
                                               <= j) /\
                                              (j
                                                 <= (Example__init_for_loop__i.i.int__content))) ->
                                             ((Standard__integer__rep.to_rep
                                                 (let temp___195 =
                                                    ((Example__init_for_loop__S1b.of_array
                                                        (Example__init_for_loop__v.v.
                                                           Array__Int__Standard__integer.map__content))
                                                       (Standard__integer__rep.to_rep
                                                          Example__init_for_loop__v.v__first))
                                                      (Standard__integer__rep.to_rep
                                                         Example__init_for_loop__v.v__last) in
                                                  (Array__Int__Standard__integer.get
                                                     (Example__init_for_loop__S1b.to_array
                                                        temp___195))
                                                    j))
                                                = Example__init_for_loop__value.value)))) } in
                        _f) in
                     begin
                       ensures { true }
                       let _ =
                         let _ =
                           let temp___inv_188 =
                             (let k = val _f : int in
                                      _f in
                              if ((Boolean.andb
                                     (([#"example.adb" 11 0 0]
                                       [@GP_Shape:L_1_while__pragargs__forall__range__add]
                                       [@comment:         pragma Loop_Invariant (for all k in i + 1 ..V'Last => V(k) = V'Loop_Entry(k));                                                ^ example.adb:11:48:VC_OVERFLOW_CHECK]
                                       [@vc:annotation]
                                       [@GP_Reason:VC_OVERFLOW_CHECK]
                                       [@GP_Sloc:example.adb:11:48]
                                       [@GP_Id:4]
                                       (Standard__integer.range_check_
                                          ((Example__init_for_loop__i.i.int__content)
                                             + (1 : int))))
                                        <= k))
                                    (k
                                       <= (Standard__integer__rep.to_rep
                                             ((begin
                                                 ensures { true }
                                                 let _ =
                                                   let _ =
                                                     ((Example__init_for_loop__S1b.of_array
                                                         (Example__init_for_loop__v.v.
                                                            Array__Int__Standard__integer.map__content))
                                                        (Standard__integer__rep.to_rep
                                                           Example__init_for_loop__v.v__first))
                                                       (Standard__integer__rep.to_rep
                                                          Example__init_for_loop__v.v__last) in
                                                   () in
                                                 ()
                                               end);
                                              Example__init_for_loop__v.v__last)))) then
                                (begin
                                   ensures { true }
                                   let _ =
                                     let _ =
                                       ((Standard__integer__rep.to_rep
                                           (let temp___189 =
                                              ((Example__init_for_loop__S1b.of_array
                                                  (Example__init_for_loop__v.v.
                                                     Array__Int__Standard__integer.map__content))
                                                 (Standard__integer__rep.to_rep
                                                    Example__init_for_loop__v.v__first))
                                                (Standard__integer__rep.to_rep
                                                   Example__init_for_loop__v.v__last) in
                                            (Array__Int__Standard__integer.get
                                               (Example__init_for_loop__S1b.to_array
                                                  temp___189))
                                              (assert {
                                                 [#"example.adb" 11 0 0]
                                                 [@GP_Sloc:example.adb:11:66]
                                                 [@vc:annotation]
                                                 [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                                 [@comment:         pragma Loop_Invariant (for all k in i + 1 ..V'Last => V(k) = V'Loop_Entry(k));                                                                  ^ example.adb:11:66:VC_INDEX_CHECK]
                                                 [@GP_Reason:VC_INDEX_CHECK]
                                                 [@GP_Id:5]
                                                 (((Example__init_for_loop__S1b.first
                                                      temp___189)
                                                     <= k) /\
                                                    (k
                                                       <= (Example__init_for_loop__S1b.last
                                                             temp___189))) };
                                               k)))
                                          = (Standard__integer__rep.to_rep
                                               ((Array__Int__Standard__integer.get
                                                   (Example__init_for_loop__S1b.to_array
                                                      temp___loop_entry_190))
                                                  (assert {
                                                     [#"example.adb" 11 0 0]
                                                     [@vc:annotation]
                                                     [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                                     [@GP_Sloc:example.adb:11:84]
                                                     [@comment:         pragma Loop_Invariant (for all k in i + 1 ..V'Last => V(k) = V'Loop_Entry(k));                                                                                    ^ example.adb:11:84:VC_INDEX_CHECK]
                                                     [@GP_Reason:VC_INDEX_CHECK]
                                                     [@GP_Id:6]
                                                     (((Example__init_for_loop__S1b.first
                                                          temp___loop_entry_190)
                                                         <= k) /\
                                                        (k
                                                           <= (Example__init_for_loop__S1b.last
                                                                 temp___loop_entry_190))) };
                                                   k)))) in
                                     () in
                                   ()
                                 end)
                              else ());
                             (val _f : bool
                                ensures { ((result = True) <->
                                             (forall k : int.
                                                (((((Example__init_for_loop__i.i.int__content)
                                                      + (1 : int))
                                                     <= k) /\
                                                    (k
                                                       <= (Standard__integer__rep.to_rep
                                                             Example__init_for_loop__v.v__last))) ->
                                                   ((Standard__integer__rep.to_rep
                                                       (let temp___191 =
                                                          ((Example__init_for_loop__S1b.of_array
                                                              (Example__init_for_loop__v.v.
                                                                 Array__Int__Standard__integer.map__content))
                                                             (Standard__integer__rep.to_rep
                                                                Example__init_for_loop__v.v__first))
                                                            (Standard__integer__rep.to_rep
                                                               Example__init_for_loop__v.v__last) in
                                                        (Array__Int__Standard__integer.get
                                                           (Example__init_for_loop__S1b.to_array
                                                              temp___191))
                                                          k))
                                                      = (Standard__integer__rep.to_rep
                                                           ((Array__Int__Standard__integer.get
                                                               (Example__init_for_loop__S1b.to_array
                                                                  temp___loop_entry_190))
                                                              k)))))) } in
                              _f) in
                           begin
                             ensures { true }
                             let _ =
                               let _ =
                                 let temp___inv_187 =
                                   (Boolean.andb
                                      ((Standard__integer__rep.to_rep
                                          ((begin
                                              ensures { true }
                                              let _ =
                                                let _ =
                                                  ((Example__init_for_loop__S1b.of_array
                                                      (Example__init_for_loop__v.v.
                                                         Array__Int__Standard__integer.map__content))
                                                     (Standard__integer__rep.to_rep
                                                        Example__init_for_loop__v.v__first))
                                                    (Standard__integer__rep.to_rep
                                                       Example__init_for_loop__v.v__last) in
                                                () in
                                              ()
                                            end);
                                           Example__init_for_loop__v.v__first))
                                         <= (Example__init_for_loop__i.i.int__content)))
                                     ((Example__init_for_loop__i.i.int__content)
                                        <= (Standard__integer__rep.to_rep
                                              ((begin
                                                  ensures { true }
                                                  let _ =
                                                    let _ =
                                                      ((Example__init_for_loop__S1b.of_array
                                                          (Example__init_for_loop__v.v.
                                                             Array__Int__Standard__integer.map__content))
                                                         (Standard__integer__rep.to_rep
                                                            Example__init_for_loop__v.v__first))
                                                        (Standard__integer__rep.to_rep
                                                           Example__init_for_loop__v.v__last) in
                                                    () in
                                                  ()
                                                end);
                                               Example__init_for_loop__v.v__last))) in
                                 () in
                               () in
                             ()
                           end in
                         () in
                       ()
                     end);
                    (begin
                       ensures { true }
                       let _ =
                         let _ = Example__init_for_loop__i.i.int__content in
                         () in
                       ()
                     end));
                   while True do
                     invariant LoopInvariant {
                       [#"example.adb" 10 0 0]
                       [@GP_Reason:VC_LOOP_INVARIANT]
                       [@vc:annotation]
                       [@comment:         pragma Loop_Invariant (for all j in V'First..i => V(j) = Value);                                 ^ example.adb:10:33:VC_LOOP_INVARIANT]
                       [@GP_Shape:L_1_while__pragargs__forall]
                       [@GP_Sloc:example.adb:10:33]
                       [@GP_Id:9]
                       (forall j : int.
                          ((((Standard__integer__rep.to_rep
                                Example__init_for_loop__v.v__first)
                               <= j) /\
                              (j
                                 <= (Example__init_for_loop__i.i.int__content))) ->
                             ([@GP_Pretty_Ada:870]
                              [@GP_Sloc:example.adb:10:60]
                              ((Standard__integer__rep.to_rep
                                  (let temp___196 =
                                     ((Example__init_for_loop__S1b.of_array
                                         (Example__init_for_loop__v.v.
                                            Array__Int__Standard__integer.map__content))
                                        (Standard__integer__rep.to_rep
                                           Example__init_for_loop__v.v__first))
                                       (Standard__integer__rep.to_rep
                                          Example__init_for_loop__v.v__last) in
                                   (Array__Int__Standard__integer.get
                                      (Example__init_for_loop__S1b.to_array
                                         temp___196))
                                     j))
                                 = Example__init_for_loop__value.value)))) }
                     invariant LoopInvariant {
                       [#"example.adb" 11 0 0]
                       [@GP_Reason:VC_LOOP_INVARIANT]
                       [@vc:annotation]
                       [@GP_Shape:L_1_while__pragargs__forall]
                       [@GP_Sloc:example.adb:11:33]
                       [@GP_Id:7]
                       [@comment:         pragma Loop_Invariant (for all k in i + 1 ..V'Last => V(k) = V'Loop_Entry(k));                                 ^ example.adb:11:33:VC_LOOP_INVARIANT]
                       (forall k : int.
                          (((((Example__init_for_loop__i.i.int__content)
                                + (1 : int))
                               <= k) /\
                              (k
                                 <= (Standard__integer__rep.to_rep
                                       Example__init_for_loop__v.v__last))) ->
                             ([@GP_Sloc:example.adb:11:64]
                              [@GP_Pretty_Ada:888]
                              ((Standard__integer__rep.to_rep
                                  (let temp___192 =
                                     ((Example__init_for_loop__S1b.of_array
                                         (Example__init_for_loop__v.v.
                                            Array__Int__Standard__integer.map__content))
                                        (Standard__integer__rep.to_rep
                                           Example__init_for_loop__v.v__first))
                                       (Standard__integer__rep.to_rep
                                          Example__init_for_loop__v.v__last) in
                                   (Array__Int__Standard__integer.get
                                      (Example__init_for_loop__S1b.to_array
                                         temp___192))
                                     k))
                                 = (Standard__integer__rep.to_rep
                                      ((Array__Int__Standard__integer.get
                                          (Example__init_for_loop__S1b.to_array
                                             temp___loop_entry_190))
                                         k)))))) }
                     invariant LoopInvariant {
                       [#"example.adb" 12 0 0]
                       [@GP_Reason:VC_LOOP_INVARIANT]
                       [@comment:         pragma Loop_Invariant (i in V'Range);                                 ^ example.adb:12:33:VC_LOOP_INVARIANT]
                       [@GP_Sloc:example.adb:12:33]
                       [@vc:annotation]
                       [@GP_Shape:L_1_while__pragargs__in]
                       [@GP_Id:3]
                       [@GP_Sloc:example.adb:12:33]
                       [@GP_Pretty_Ada:898]
                       (((Standard__integer__rep.to_rep
                            Example__init_for_loop__v.v__first)
                           <= (Example__init_for_loop__i.i.int__content)) /\
                          ((Example__init_for_loop__i.i.int__content)
                             <= (Standard__integer__rep.to_rep
                                   Example__init_for_loop__v.v__last))) }
                     let loop_var___5034 =
                       Example__init_for_loop__i.i.int__content in
                     ([@GNAT-comment:gnat_ast_to_ptree: code after the loop invariant]
                      (([@GNAT-comment:Assume implicit invariants from the loop example.adb:6]
                        ());
                       assume {
                         ((((true /\ true) /\ (true /\ true)) /\
                             (((((Standard__positive___axiom.dynamic_invariant
                                    (Example__init_for_loop__i.i.int__content))
                                   True)
                                  True)
                                 True)
                                True)) /\
                            (true /\ true)) };
                       ([@GNAT-comment:Continuation of loop after loop invariant and variant]
                        ());
                       ([@GP_Sloc:example.adb:14:10]
                        [#"example.adb" 14 0 0] ());
                       ([@GP_Sloc:example.adb:14:15]
                        [#"example.adb" 14 0 0] ());
                       ([@GP_Sloc:example.adb:14:12]
                        [#"example.adb" 14 0 0]
                        [#"example.adb" 14 0 0]
                        (Example__init_for_loop__i.i.int__content <-
                           ([#"example.adb" 14 0 0]
                            [@vc:annotation]
                            [@GP_Reason:VC_OVERFLOW_CHECK]
                            [@comment:         i := i + 1;                 ^ example.adb:14:17:VC_OVERFLOW_CHECK]
                            [@GP_Sloc:example.adb:14:17]
                            [@GP_Id:2]
                            [@GP_Shape:L_1_while__i_assign__add]
                            (Standard__integer.range_check_
                               ((Example__init_for_loop__i.i.int__content)
                                  + (1 : int))))));
                       ([@GNAT-comment:Check for the exit condition and loop statements appearing before the loop invariant of loop example.adb:6]
                        ());
                       (if (not ((Example__init_for_loop__i.i.int__content)
                                   <= (Standard__integer__rep.to_rep
                                         ((begin
                                             ensures { true }
                                             let _ =
                                               let _ =
                                                 ((Example__init_for_loop__S1b.of_array
                                                     (Example__init_for_loop__v.v.
                                                        Array__Int__Standard__integer.map__content))
                                                    (Standard__integer__rep.to_rep
                                                       Example__init_for_loop__v.v__first))
                                                   (Standard__integer__rep.to_rep
                                                      Example__init_for_loop__v.v__last) in
                                               () in
                                             ()
                                           end);
                                          Example__init_for_loop__v.v__last)))) then
                          (raise Example__init_for_loop__L_1.L_1)
                        else ())));
                     ([@GNAT-comment:gnat_ast_to_ptree: code before the loop invariant]
                      (([@GP_Sloc:example.adb:7:12] [#"example.adb" 7 0 0] ());
                       ([@GP_Sloc:example.adb:7:15]
                        [#"example.adb" 7 0 0]
                        [#"example.adb" 7 0 0]
                        (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content <-
                           (Example__init_for_loop__S1b.to_array
                              (let temp___182 =
                                 ((Example__init_for_loop__S1b.of_array
                                     (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                                    (Standard__integer__rep.to_rep
                                       Example__init_for_loop__v.v__first))
                                   (Standard__integer__rep.to_rep
                                      Example__init_for_loop__v.v__last) in
                               { (((Example__init_for_loop__S1b.of_array
                                      (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                                     (Standard__integer__rep.to_rep
                                        Example__init_for_loop__v.v__first))
                                    (Standard__integer__rep.to_rep
                                       Example__init_for_loop__v.v__last)) with
                                 Example__init_for_loop__S1b.elts =
                                   (((Array__Int__Standard__integer.set
                                        (Example__init_for_loop__S1b.to_array
                                           (((Example__init_for_loop__S1b.of_array
                                                (Example__init_for_loop__v.v.
                                                   Array__Int__Standard__integer.map__content))
                                               (Standard__integer__rep.to_rep
                                                  Example__init_for_loop__v.v__first))
                                              (Standard__integer__rep.to_rep
                                                 Example__init_for_loop__v.v__last))))
                                       (([#"example.adb" 7 0 0]
                                         assert {
                                           [#"example.adb" 7 0 0]
                                           [#"example.adb" 7 0 0]
                                           [@GP_Sloc:example.adb:7:12]
                                           [@vc:annotation]
                                           [@GP_Shape:L_1_while__v_assign__ixdcomp]
                                           [@GP_Reason:VC_INDEX_CHECK]
                                           [@GP_Id:1]
                                           [@comment:         V(i) := Value;            ^ example.adb:7:12:VC_INDEX_CHECK]
                                           (((Example__init_for_loop__S1b.first
                                                temp___182)
                                               <= (Example__init_for_loop__i.i.int__content)) /\
                                              ((Example__init_for_loop__i.i.int__content)
                                                 <= (Example__init_for_loop__S1b.last
                                                       temp___182))) });
                                        (Example__init_for_loop__i.i.int__content)))
                                      (Standard__integer__rep.of_rep
                                         Example__init_for_loop__value.value)) }))));
                       ([@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                        ());
                       (let temp___inv_193 =
                          (let j = val _f : int in
                                   _f in
                           if ((Boolean.andb
                                  ((Standard__integer__rep.to_rep
                                      ((begin
                                          ensures { true }
                                          let _ =
                                            let _ =
                                              ((Example__init_for_loop__S1b.of_array
                                                  (Example__init_for_loop__v.v.
                                                     Array__Int__Standard__integer.map__content))
                                                 (Standard__integer__rep.to_rep
                                                    Example__init_for_loop__v.v__first))
                                                (Standard__integer__rep.to_rep
                                                   Example__init_for_loop__v.v__last) in
                                            () in
                                          ()
                                        end);
                                       Example__init_for_loop__v.v__first))
                                     <= j))
                                 (j
                                    <= (Example__init_for_loop__i.i.int__content))) then
                             (begin
                                ensures { true }
                                let _ =
                                  let _ =
                                    ((Standard__integer__rep.to_rep
                                        (let temp___194 =
                                           ((Example__init_for_loop__S1b.of_array
                                               (Example__init_for_loop__v.v.
                                                  Array__Int__Standard__integer.map__content))
                                              (Standard__integer__rep.to_rep
                                                 Example__init_for_loop__v.v__first))
                                             (Standard__integer__rep.to_rep
                                                Example__init_for_loop__v.v__last) in
                                         (Array__Int__Standard__integer.get
                                            (Example__init_for_loop__S1b.to_array
                                               temp___194))
                                           (assert {
                                              [#"example.adb" 10 0 0]
                                              [@comment:         pragma Loop_Invariant (for all j in V'First..i => V(j) = Value);                                                              ^ example.adb:10:62:VC_INDEX_CHECK]
                                              [@vc:annotation]
                                              [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                              [@GP_Sloc:example.adb:10:62]
                                              [@GP_Reason:VC_INDEX_CHECK]
                                              [@GP_Id:8]
                                              (((Example__init_for_loop__S1b.first
                                                   temp___194)
                                                  <= j) /\
                                                 (j
                                                    <= (Example__init_for_loop__S1b.last
                                                          temp___194))) };
                                            j)))
                                       = Example__init_for_loop__value.value) in
                                  () in
                                ()
                              end)
                           else ());
                          (val _f : bool
                             ensures { ((result = True) <->
                                          (forall j : int.
                                             ((((Standard__integer__rep.to_rep
                                                   Example__init_for_loop__v.v__first)
                                                  <= j) /\
                                                 (j
                                                    <= (Example__init_for_loop__i.i.int__content))) ->
                                                ((Standard__integer__rep.to_rep
                                                    (let temp___195 =
                                                       ((Example__init_for_loop__S1b.of_array
                                                           (Example__init_for_loop__v.v.
                                                              Array__Int__Standard__integer.map__content))
                                                          (Standard__integer__rep.to_rep
                                                             Example__init_for_loop__v.v__first))
                                                         (Standard__integer__rep.to_rep
                                                            Example__init_for_loop__v.v__last) in
                                                     (Array__Int__Standard__integer.get
                                                        (Example__init_for_loop__S1b.to_array
                                                           temp___195))
                                                       j))
                                                   = Example__init_for_loop__value.value)))) } in
                           _f) in
                        begin
                          ensures { true }
                          let _ =
                            let _ =
                              let temp___inv_188 =
                                (let k = val _f : int in
                                         _f in
                                 if ((Boolean.andb
                                        (([#"example.adb" 11 0 0]
                                          [@GP_Shape:L_1_while__pragargs__forall__range__add]
                                          [@comment:         pragma Loop_Invariant (for all k in i + 1 ..V'Last => V(k) = V'Loop_Entry(k));                                                ^ example.adb:11:48:VC_OVERFLOW_CHECK]
                                          [@vc:annotation]
                                          [@GP_Reason:VC_OVERFLOW_CHECK]
                                          [@GP_Sloc:example.adb:11:48]
                                          [@GP_Id:4]
                                          (Standard__integer.range_check_
                                             ((Example__init_for_loop__i.i.int__content)
                                                + (1 : int))))
                                           <= k))
                                       (k
                                          <= (Standard__integer__rep.to_rep
                                                ((begin
                                                    ensures { true }
                                                    let _ =
                                                      let _ =
                                                        ((Example__init_for_loop__S1b.of_array
                                                            (Example__init_for_loop__v.v.
                                                               Array__Int__Standard__integer.map__content))
                                                           (Standard__integer__rep.to_rep
                                                              Example__init_for_loop__v.v__first))
                                                          (Standard__integer__rep.to_rep
                                                             Example__init_for_loop__v.v__last) in
                                                      () in
                                                    ()
                                                  end);
                                                 Example__init_for_loop__v.v__last)))) then
                                   (begin
                                      ensures { true }
                                      let _ =
                                        let _ =
                                          ((Standard__integer__rep.to_rep
                                              (let temp___189 =
                                                 ((Example__init_for_loop__S1b.of_array
                                                     (Example__init_for_loop__v.v.
                                                        Array__Int__Standard__integer.map__content))
                                                    (Standard__integer__rep.to_rep
                                                       Example__init_for_loop__v.v__first))
                                                   (Standard__integer__rep.to_rep
                                                      Example__init_for_loop__v.v__last) in
                                               (Array__Int__Standard__integer.get
                                                  (Example__init_for_loop__S1b.to_array
                                                     temp___189))
                                                 (assert {
                                                    [#"example.adb" 11 0 0]
                                                    [@GP_Sloc:example.adb:11:66]
                                                    [@vc:annotation]
                                                    [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                                    [@comment:         pragma Loop_Invariant (for all k in i + 1 ..V'Last => V(k) = V'Loop_Entry(k));                                                                  ^ example.adb:11:66:VC_INDEX_CHECK]
                                                    [@GP_Reason:VC_INDEX_CHECK]
                                                    [@GP_Id:5]
                                                    (((Example__init_for_loop__S1b.first
                                                         temp___189)
                                                        <= k) /\
                                                       (k
                                                          <= (Example__init_for_loop__S1b.last
                                                                temp___189))) };
                                                  k)))
                                             = (Standard__integer__rep.to_rep
                                                  ((Array__Int__Standard__integer.get
                                                      (Example__init_for_loop__S1b.to_array
                                                         temp___loop_entry_190))
                                                     (assert {
                                                        [#"example.adb" 11 0 0]
                                                        [@vc:annotation]
                                                        [@GP_Shape:L_1_while__pragargs__forall__cmp__ixdcomp]
                                                        [@GP_Sloc:example.adb:11:84]
                                                        [@comment:         pragma Loop_Invariant (for all k in i + 1 ..V'Last => V(k) = V'Loop_Entry(k));                                                                                    ^ example.adb:11:84:VC_INDEX_CHECK]
                                                        [@GP_Reason:VC_INDEX_CHECK]
                                                        [@GP_Id:6]
                                                        (((Example__init_for_loop__S1b.first
                                                             temp___loop_entry_190)
                                                            <= k) /\
                                                           (k
                                                              <= (Example__init_for_loop__S1b.last
                                                                    temp___loop_entry_190))) };
                                                      k)))) in
                                        () in
                                      ()
                                    end)
                                 else ());
                                (val _f : bool
                                   ensures { ((result = True) <->
                                                (forall k : int.
                                                   (((((Example__init_for_loop__i.i.int__content)
                                                         + (1 : int))
                                                        <= k) /\
                                                       (k
                                                          <= (Standard__integer__rep.to_rep
                                                                Example__init_for_loop__v.v__last))) ->
                                                      ((Standard__integer__rep.to_rep
                                                          (let temp___191 =
                                                             ((Example__init_for_loop__S1b.of_array
                                                                 (Example__init_for_loop__v.v.
                                                                    Array__Int__Standard__integer.map__content))
                                                                (Standard__integer__rep.to_rep
                                                                   Example__init_for_loop__v.v__first))
                                                               (Standard__integer__rep.to_rep
                                                                  Example__init_for_loop__v.v__last) in
                                                           (Array__Int__Standard__integer.get
                                                              (Example__init_for_loop__S1b.to_array
                                                                 temp___191))
                                                             k))
                                                         = (Standard__integer__rep.to_rep
                                                              ((Array__Int__Standard__integer.get
                                                                  (Example__init_for_loop__S1b.to_array
                                                                    temp___loop_entry_190))
                                                                 k)))))) } in
                                 _f) in
                              begin
                                ensures { true }
                                let _ =
                                  let _ =
                                    let temp___inv_187 =
                                      (Boolean.andb
                                         ((Standard__integer__rep.to_rep
                                             ((begin
                                                 ensures { true }
                                                 let _ =
                                                   let _ =
                                                     ((Example__init_for_loop__S1b.of_array
                                                         (Example__init_for_loop__v.v.
                                                            Array__Int__Standard__integer.map__content))
                                                        (Standard__integer__rep.to_rep
                                                           Example__init_for_loop__v.v__first))
                                                       (Standard__integer__rep.to_rep
                                                          Example__init_for_loop__v.v__last) in
                                                   () in
                                                 ()
                                               end);
                                              Example__init_for_loop__v.v__first))
                                            <= (Example__init_for_loop__i.i.int__content)))
                                        ((Example__init_for_loop__i.i.int__content)
                                           <= (Standard__integer__rep.to_rep
                                                 ((begin
                                                     ensures { true }
                                                     let _ =
                                                       let _ =
                                                         ((Example__init_for_loop__S1b.of_array
                                                             (Example__init_for_loop__v.v.
                                                                Array__Int__Standard__integer.map__content))
                                                            (Standard__integer__rep.to_rep
                                                               Example__init_for_loop__v.v__first))
                                                           (Standard__integer__rep.to_rep
                                                              Example__init_for_loop__v.v__last) in
                                                       () in
                                                     ()
                                                   end);
                                                  Example__init_for_loop__v.v__last))) in
                                    () in
                                  () in
                                ()
                              end in
                            () in
                          ()
                        end);
                       (begin
                          ensures { true }
                          let _ =
                            let _ = Example__init_for_loop__i.i.int__content in
                            () in
                          ()
                        end)));
                     ([@GNAT-comment:gnat_ast_to_ptree: code checking the variants]
                      (assert {
                         [@GP_Reason:VC_LOOP_VARIANT]
                         [@GP_Id:10]
                         [@GP_Sloc:example.adb:9:30]
                         [@vc:annotation]
                         [@comment:         pragma Loop_Variant(Increases => i);                              ^ example.adb:9:30:VC_LOOP_VARIANT]
                         [@GP_Shape:L_1_while__pragargs]
                         (((Example__init_for_loop__i.i.int__content)
                             > loop_var___5034)
                            ||
                            ((Example__init_for_loop__i.i.int__content)
                             =
                             loop_var___5034)
                            &&
                            False) };
                       ()))
                   done))
               with Example__init_for_loop__L_1.L_1 -> ()
               end))
           else ())));
        (raise Return__exc)
      with Return__exc -> ()
      end);
     (begin
        ensures { true }
        let _ =
          let _ =
            (let j = val _f : int in
                     _f in
             if ((Boolean.andb
                    ((Standard__integer__rep.to_rep
                        ((begin
                            ensures { true }
                            let _ =
                              let _ =
                                ((Example__init_for_loop__S1b.of_array
                                    (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                                   (Standard__integer__rep.to_rep
                                      Example__init_for_loop__v.v__first))
                                  (Standard__integer__rep.to_rep
                                     Example__init_for_loop__v.v__last) in
                              () in
                            ()
                          end);
                         Example__init_for_loop__v.v__first))
                       <= j))
                   (j
                      <= (Standard__integer__rep.to_rep
                            ((begin
                                ensures { true }
                                let _ =
                                  let _ =
                                    ((Example__init_for_loop__S1b.of_array
                                        (Example__init_for_loop__v.v.
                                           Array__Int__Standard__integer.map__content))
                                       (Standard__integer__rep.to_rep
                                          Example__init_for_loop__v.v__first))
                                      (Standard__integer__rep.to_rep
                                         Example__init_for_loop__v.v__last) in
                                  () in
                                ()
                              end);
                             Example__init_for_loop__v.v__last)))) then
               (begin
                  ensures { true }
                  let _ =
                    let _ =
                      ((Standard__integer__rep.to_rep
                          (let temp___198 =
                             ((Example__init_for_loop__S1b.of_array
                                 (Example__init_for_loop__v.v.Array__Int__Standard__integer.map__content))
                                (Standard__integer__rep.to_rep
                                   Example__init_for_loop__v.v__first))
                               (Standard__integer__rep.to_rep
                                  Example__init_for_loop__v.v__last) in
                           (Array__Int__Standard__integer.get
                              (Example__init_for_loop__S1b.to_array
                                 temp___198))
                             (assert {
                                [#"example.ads" 10 0 0]
                                [@GP_Sloc:example.ads:10:41]
                                [@GP_Id:11]
                                [@comment:     Post => (for all j in V'Range => V(j) = Value);                                         ^ example.ads:10:41:VC_INDEX_CHECK]
                                [@vc:annotation]
                                [@GP_Shape:pragargs__forall__cmp__ixdcomp]
                                [@GP_Reason:VC_INDEX_CHECK]
                                (((Example__init_for_loop__S1b.first
                                     temp___198)
                                    <= j) /\
                                   (j
                                      <= (Example__init_for_loop__S1b.last
                                            temp___198))) };
                              j)))
                         = Example__init_for_loop__value.value) in
                    () in
                  ()
                end)
             else ());
            (val _f : bool
               ensures { ((result = True) <->
                            (forall j : int.
                               ((((Standard__integer__rep.to_rep
                                     Example__init_for_loop__v.v__first)
                                    <= j) /\
                                   (j
                                      <= (Standard__integer__rep.to_rep
                                            Example__init_for_loop__v.v__last))) ->
                                  ([@GP_Pretty_Ada:979]
                                   ((Standard__integer__rep.to_rep
                                       (let temp___199 =
                                          ((Example__init_for_loop__S1b.of_array
                                              (Example__init_for_loop__v.v.
                                                 Array__Int__Standard__integer.map__content))
                                             (Standard__integer__rep.to_rep
                                                Example__init_for_loop__v.v__first))
                                            (Standard__integer__rep.to_rep
                                               Example__init_for_loop__v.v__last) in
                                        (Array__Int__Standard__integer.get
                                           (Example__init_for_loop__S1b.to_array
                                              temp___199))
                                          j))
                                      = Example__init_for_loop__value.value))))) } in
             _f) in
          () in
        ()
      end))
end
